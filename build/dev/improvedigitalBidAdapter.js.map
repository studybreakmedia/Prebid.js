{"version":3,"sources":["webpack:///./modules/improvedigitalBidAdapter.js"],"names":["utils","BIDDER_CODE","spec","version","code","aliases","isBidRequestValid","bid","params","placementId","placementKey","publisherId","buildRequests","bidRequests","normalizedBids","map","bidRequest","getNormalizedBidRequest","idClient","ImproveDigitalAdServerJSClient","requestParameters","singleRequestMode","httpRequestType","CONSTANTS","HTTP_REQUEST_TYPE","GET","returnObjType","RETURN_OBJ_TYPE","PREBID","libVersion","requestObj","createRequest","errors","length","logError","requests","interpretResponse","serverResponse","request","bids","_each","body","bidObject","price","hasOwnProperty","adm","nurl","ad","adId","id","cpm","parseFloat","creativeId","crid","currency","toUpperCase","isNumber","lid","dealId","height","h","netRevenue","isNet","requestId","ttl","width","w","push","isArray","sync","syncElement","registerSync","adUnitId","getBidIdParameter","keyValues","localSize","bidId","transactionId","normalizedBidRequest","size","endPoint","POST","HTTP_SECURITY","STANDARD","SECURE","AD_SERVER_BASE_URL","END_POINT","AD_SERVER_URL_PARAM","CLIENT_VERSION","MAX_URL_LENGTH","ERROR_CODES","BAD_HTTP_REQUEST_TYPE_PARAM","MISSING_PLACEMENT_PARAMS","LIB_VERSION_MISSING","DEFAULT","getErrorReturn","errorCode","idMappings","requestObject","extraRequestParameters","impressionObjects","impressionObject","counter","createImpressionObject","returnIdMappings","returnObject","baseUrl","secure","bidRequestObject","bid_request","createBasicBidRequestObject","imp","writeLongRequest","outputUri","encodeURIComponent","JSON","stringify","pop","formatRequest","method","url","data","impressionBidRequestObject","getUniqueIdentifierStr","domain","page","ref","callback","prop","placementObject","outputObject","pid","pubid","pkey","tid","key","valueCounter","kvw","banner","exports"],"mappings":"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","file":"improvedigitalBidAdapter.js","sourcesContent":["import * as utils from 'src/utils';\nimport { registerBidder } from 'src/adapters/bidderFactory';\nimport { userSync } from 'src/userSync';\n\nconst BIDDER_CODE = 'improvedigital';\n\nexport const spec = {\n  version: '4.0.0',\n  code: BIDDER_CODE,\n  aliases: ['id'],\n\n  /**\n   * Determines whether or not the given bid request is valid.\n   *\n   * @param {object} bid The bid to validate.\n   * @return boolean True if this is a valid bid, and false otherwise.\n   */\n  isBidRequestValid: function (bid) {\n    return !!(bid && bid.params && (bid.params.placementId || (bid.params.placementKey && bid.params.publisherId)));\n  },\n\n  /**\n   * Make a server request from the list of BidRequests.\n   *\n   * @param {BidRequest[]} bidRequests A non-empty list of bid requests which should be sent to the Server.\n   * @return ServerRequest Info describing the request to the server.\n   */\n  buildRequests: function (bidRequests) {\n    let normalizedBids = bidRequests.map((bidRequest) => {\n      return getNormalizedBidRequest(bidRequest);\n    });\n\n    let idClient = new ImproveDigitalAdServerJSClient('hb');\n    let requestParameters = {\n      singleRequestMode: false,\n      httpRequestType: idClient.CONSTANTS.HTTP_REQUEST_TYPE.GET,\n      returnObjType: idClient.CONSTANTS.RETURN_OBJ_TYPE.PREBID,\n      libVersion: this.version\n    };\n\n    let requestObj = idClient.createRequest(\n      normalizedBids, // requestObject\n      requestParameters\n    );\n\n    if (requestObj.errors && requestObj.errors.length > 0) {\n      utils.logError('ID WARNING 0x01');\n    }\n\n    return requestObj.requests;\n  },\n\n  /**\n   * Unpack the response from the server into a list of bids.\n   *\n   * @param {*} serverResponse A successful response from the server.\n   * @return {Bid[]} An array of bids which were nested inside the server.\n   */\n  interpretResponse: function (serverResponse, request) {\n    const bids = [];\n    utils._each(serverResponse.body.bid, function (bidObject) {\n      if (!bidObject.price || bidObject.price === null ||\n        bidObject.hasOwnProperty('errorCode') ||\n        typeof bidObject.adm !== 'string') {\n        return;\n      }\n\n      let bid = {};\n      let nurl = '';\n      if (bidObject.nurl && bidObject.nurl.length > 0) {\n        nurl = `<img src=\"${bidObject.nurl}\" width=\"0\" height=\"0\" style=\"display:none\">`;\n      }\n      bid.ad = `${nurl}<script>${bidObject.adm}</script>`;\n      bid.adId = bidObject.id;\n      bid.cpm = parseFloat(bidObject.price);\n      bid.creativeId = bidObject.crid;\n      bid.currency = bidObject.currency ? bidObject.currency.toUpperCase() : 'USD';\n      if (utils.isNumber(bidObject.lid)) {\n        bid.dealId = bidObject.lid;\n      } else if (typeof bidObject.lid === 'object' && bidObject.lid['1']) {\n        bid.dealId = bidObject.lid['1'];\n      }\n      bid.height = bidObject.h;\n      bid.netRevenue = bidObject.isNet ? bidObject.isNet : false;\n      bid.requestId = bidObject.id;\n      bid.ttl = 300;\n      bid.width = bidObject.w;\n\n      bids.push(bid);\n\n      // Register user sync URLs\n      if (utils.isArray(bidObject.sync)) {\n        utils._each(bidObject.sync, function (syncElement) {\n          userSync.registerSync('image', spec.code, syncElement);\n        });\n      }\n    });\n    return bids;\n  }\n};\n\nfunction getNormalizedBidRequest(bid) {\n  let adUnitId = utils.getBidIdParameter('adUnitCode', bid) || null;\n  let placementId = utils.getBidIdParameter('placementId', bid.params) || null;\n  let publisherId = null;\n  let placementKey = null;\n\n  if (placementId === null) {\n    publisherId = utils.getBidIdParameter('publisherId', bid.params) || null;\n    placementKey = utils.getBidIdParameter('placementKey', bid.params) || null;\n  }\n  let keyValues = utils.getBidIdParameter('keyValues', bid.params) || null;\n  let localSize = utils.getBidIdParameter('size', bid.params) || null;\n  let bidId = utils.getBidIdParameter('bidId', bid);\n  let transactionId = utils.getBidIdParameter('transactionId', bid);\n\n  let normalizedBidRequest = {};\n  if (placementId) {\n    normalizedBidRequest.placementId = placementId;\n  } else {\n    if (publisherId) {\n      normalizedBidRequest.publisherId = publisherId;\n    }\n    if (placementKey) {\n      normalizedBidRequest.placementKey = placementKey;\n    }\n  }\n\n  if (keyValues) {\n    normalizedBidRequest.keyValues = keyValues;\n  }\n  if (localSize && localSize.w && localSize.h) {\n    normalizedBidRequest.size = {};\n    normalizedBidRequest.size.h = localSize.h;\n    normalizedBidRequest.size.w = localSize.w;\n  }\n  if (bidId) {\n    normalizedBidRequest.id = bidId;\n  }\n  if (adUnitId) {\n    normalizedBidRequest.adUnitId = adUnitId;\n  }\n  if (transactionId) {\n    normalizedBidRequest.transactionId = transactionId;\n  }\n  return normalizedBidRequest;\n}\nregisterBidder(spec);\n\nfunction ImproveDigitalAdServerJSClient(endPoint) {\n  this.CONSTANTS = {\n    HTTP_REQUEST_TYPE: {\n      GET: 0,\n      POST: 1\n    },\n    HTTP_SECURITY: {\n      STANDARD: 0,\n      SECURE: 1\n    },\n    AD_SERVER_BASE_URL: 'ad.360yield.com',\n    END_POINT: endPoint || 'hb',\n    AD_SERVER_URL_PARAM: 'jsonp=',\n    CLIENT_VERSION: 'JS-4.2.0',\n    MAX_URL_LENGTH: 2083,\n    ERROR_CODES: {\n      BAD_HTTP_REQUEST_TYPE_PARAM: 1,\n      MISSING_PLACEMENT_PARAMS: 2,\n      LIB_VERSION_MISSING: 3\n    },\n    RETURN_OBJ_TYPE: {\n      DEFAULT: 0,\n      PREBID: 1\n    }\n  };\n\n  this.getErrorReturn = function(errorCode) {\n    return {\n      idMappings: {},\n      requests: {},\n      'errorCode': errorCode\n    };\n  };\n\n  this.createRequest = function(requestObject, requestParameters, extraRequestParameters) {\n    if (requestParameters.httpRequestType !== this.CONSTANTS.HTTP_REQUEST_TYPE.GET) {\n      return this.getErrorReturn(this.CONSTANTS.ERROR_CODES.BAD_HTTP_REQUEST_TYPE_PARAM);\n    }\n    if (!requestParameters.libVersion) {\n      return this.getErrorReturn(this.CONSTANTS.ERROR_CODES.LIB_VERSION_MISSING);\n    }\n\n    requestParameters.returnObjType = requestParameters.returnObjType || this.CONSTANTS.RETURN_OBJ_TYPE.DEFAULT;\n\n    let impressionObjects = [];\n    let impressionObject;\n    let counter;\n    if (utils.isArray(requestObject)) {\n      for (counter = 0; counter < requestObject.length; counter++) {\n        impressionObject = this.createImpressionObject(requestObject[counter]);\n        impressionObjects.push(impressionObject);\n      }\n    } else {\n      impressionObject = this.createImpressionObject(requestObject);\n      impressionObjects.push(impressionObject);\n    }\n\n    let returnIdMappings = true;\n    if (requestParameters.returnObjType === this.CONSTANTS.RETURN_OBJ_TYPE.PREBID) {\n      returnIdMappings = false;\n    }\n\n    let returnObject = {};\n    returnObject.requests = [];\n    if (returnIdMappings) {\n      returnObject.idMappings = [];\n    }\n    let errors = null;\n\n    let baseUrl = `${(requestParameters.secure === 1 ? 'https' : 'http')}://${this.CONSTANTS.AD_SERVER_BASE_URL}/${this.CONSTANTS.END_POINT}?${this.CONSTANTS.AD_SERVER_URL_PARAM}`;\n\n    let bidRequestObject = {\n      bid_request: this.createBasicBidRequestObject(requestParameters, extraRequestParameters)\n    };\n    for (counter = 0; counter < impressionObjects.length; counter++) {\n      impressionObject = impressionObjects[counter];\n\n      if (impressionObject.errorCode) {\n        errors = errors || [];\n        errors.push({\n          errorCode: impressionObject.errorCode,\n          adUnitId: impressionObject.adUnitId\n        });\n      } else {\n        if (returnIdMappings) {\n          returnObject.idMappings.push({\n            adUnitId: impressionObject.adUnitId,\n            id: impressionObject.impressionObject.id\n          });\n        }\n        bidRequestObject.bid_request.imp = bidRequestObject.bid_request.imp || [];\n        bidRequestObject.bid_request.imp.push(impressionObject.impressionObject);\n\n        let writeLongRequest = false;\n        const outputUri = baseUrl + encodeURIComponent(JSON.stringify(bidRequestObject));\n        if (outputUri.length > this.CONSTANTS.MAX_URL_LENGTH) {\n          writeLongRequest = true;\n          if (bidRequestObject.bid_request.imp.length > 1) {\n            // Pop the current request and process it again in the next iteration\n            bidRequestObject.bid_request.imp.pop();\n            if (returnIdMappings) {\n              returnObject.idMappings.pop();\n            }\n            counter--;\n          }\n        }\n\n        if (writeLongRequest ||\n            !requestParameters.singleRequestMode ||\n            counter === impressionObjects.length - 1) {\n          returnObject.requests.push(this.formatRequest(requestParameters, bidRequestObject));\n          bidRequestObject = {\n            bid_request: this.createBasicBidRequestObject(requestParameters, extraRequestParameters)\n          };\n        }\n      }\n    }\n\n    if (errors) {\n      returnObject.errors = errors;\n    }\n\n    return returnObject;\n  };\n\n  this.formatRequest = function(requestParameters, bidRequestObject) {\n    switch (requestParameters.returnObjType) {\n      case this.CONSTANTS.RETURN_OBJ_TYPE.PREBID:\n        return {\n          method: 'GET',\n          url: `//${this.CONSTANTS.AD_SERVER_BASE_URL}/${this.CONSTANTS.END_POINT}`,\n          data: `${this.CONSTANTS.AD_SERVER_URL_PARAM}${JSON.stringify(bidRequestObject)}`\n        };\n      default:\n        const baseUrl = `${(requestParameters.secure === 1 ? 'https' : 'http')}://` +\n          `${this.CONSTANTS.AD_SERVER_BASE_URL}/` +\n          `${this.CONSTANTS.END_POINT}?${this.CONSTANTS.AD_SERVER_URL_PARAM}`;\n        return {\n          url: baseUrl + encodeURIComponent(JSON.stringify(bidRequestObject))\n        }\n    }\n  };\n\n  this.createBasicBidRequestObject = function(requestParameters, extraRequestParameters) {\n    let impressionBidRequestObject = {};\n    if (requestParameters.requestId) {\n      impressionBidRequestObject.id = requestParameters.requestId;\n    } else {\n      impressionBidRequestObject.id = utils.getUniqueIdentifierStr();\n    }\n    if (requestParameters.domain) {\n      impressionBidRequestObject.domain = requestParameters.domain;\n    }\n    if (requestParameters.page) {\n      impressionBidRequestObject.page = requestParameters.page;\n    }\n    if (requestParameters.ref) {\n      impressionBidRequestObject.ref = requestParameters.ref;\n    }\n    if (requestParameters.callback) {\n      impressionBidRequestObject.callback = requestParameters.callback;\n    }\n    if ('secure' in requestParameters) {\n      impressionBidRequestObject.secure = requestParameters.secure;\n    }\n    if (requestParameters.libVersion) {\n      impressionBidRequestObject.version = requestParameters.libVersion + '-' + this.CONSTANTS.CLIENT_VERSION;\n    }\n    if (extraRequestParameters) {\n      for (let prop in extraRequestParameters) {\n        impressionBidRequestObject[prop] = extraRequestParameters[prop];\n      }\n    }\n\n    return impressionBidRequestObject;\n  };\n\n  this.createImpressionObject = function(placementObject) {\n    let outputObject = {};\n    let impressionObject = {};\n    outputObject.impressionObject = impressionObject;\n\n    if (placementObject.id) {\n      impressionObject.id = placementObject.id;\n    } else {\n      impressionObject.id = utils.getUniqueIdentifierStr();\n    }\n    if (placementObject.adUnitId) {\n      outputObject.adUnitId = placementObject.adUnitId;\n    }\n    if (placementObject.placementId) {\n      impressionObject.pid = placementObject.placementId;\n    }\n    if (placementObject.publisherId) {\n      impressionObject.pubid = placementObject.publisherId;\n    }\n    if (placementObject.placementKey) {\n      impressionObject.pkey = placementObject.placementKey;\n    }\n    if (placementObject.transactionId) {\n      impressionObject.tid = placementObject.transactionId;\n    }\n    if (placementObject.keyValues) {\n      for (let key in placementObject.keyValues) {\n        for (let valueCounter = 0; valueCounter < placementObject.keyValues[key].length; valueCounter++) {\n          impressionObject.kvw = impressionObject.kvw || {};\n          impressionObject.kvw[key] = impressionObject.kvw[key] || [];\n          impressionObject.kvw[key].push(placementObject.keyValues[key][valueCounter]);\n        }\n      }\n    }\n    if (placementObject.size && placementObject.size.w && placementObject.size.h) {\n      impressionObject.banner = {};\n      impressionObject.banner.w = placementObject.size.w;\n      impressionObject.banner.h = placementObject.size.h;\n    } else {\n      impressionObject.banner = {};\n    }\n\n    if (!impressionObject.pid &&\n    !impressionObject.pubid &&\n    !impressionObject.pkey &&\n    !(impressionObject.banner && impressionObject.banner.w && impressionObject.banner.h)) {\n      outputObject.impressionObject = null;\n      outputObject.errorCode = this.CONSTANTS.ERROR_CODES.MISSING_PLACEMENT_PARAMS;\n    }\n    return outputObject;\n  };\n}\n\nexports.ImproveDigitalAdServerJSClient = ImproveDigitalAdServerJSClient;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/improvedigitalBidAdapter.js"],"sourceRoot":""}