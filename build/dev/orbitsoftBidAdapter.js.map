{"version":3,"sources":["webpack:///./modules/orbitsoftBidAdapter.js"],"names":["CONSTANTS","require","bidmanager","bidfactory","adloader","utils","adaptermanager","Adapter","ORBITSOFT_BIDDERCODE","styleParamsToFieldsMap","OrbitsoftAdapter","baseAdapter","callBids","params","bids","i","length","bidRequest","callbackId","bidId","jptCall","buildJPTCall","loadScript","bid","createBid","STATUS","NO_BID","bidderCode","addBidResponse","placementCode","placementId","getBidIdParameter","referrer","location","logMessage","tryAppendQueryString","sizeQueryString","parsedSizes","parseSizesInput","sizes","parsedSizesLength","paramsCopy","style","customParams","parseQueryStringParameters","getTopWindowUrl","window","top","document","removeTrailingAmp","startTime","Date","getTime","url","lastIndexOf","substring","pbjs","handleOASCB","jptResponseObj","bidCode","callback_uid","responseCPM","id","bidObj","bidder","status","GOOD","cpm","adUrl","content_url","width","height","styles","stylesParams","currentValue","hasOwnProperty","currentStyle","field","styleField","undefined","customParamsArray","customField","customParamsLink","setBidderCode","registerBidAdapter","module","exports"],"mappings":"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","file":"orbitsoftBidAdapter.js","sourcesContent":["import { getBidRequest } from 'src/utils';\n\nlet CONSTANTS = require('src/constants');\nlet bidmanager = require('src/bidmanager');\nlet bidfactory = require('src/bidfactory');\nlet adloader = require('src/adloader');\nlet utils = require('src/utils');\nlet adaptermanager = require('src/adaptermanager');\nlet Adapter = require('src/adapter').default;\n\nlet ORBITSOFT_BIDDERCODE = 'orbitsoft';\nlet styleParamsToFieldsMap = {\n  'title.family': 'f1', // headerFont\n  'title.size': 'fs1', // headerFontSize\n  'title.weight': 'w1', // headerWeight\n  'title.style': 's1', // headerStyle\n  'title.color': 'c3', // headerColor\n  'description.family': 'f2', // descriptionFont\n  'description.size': 'fs2', // descriptionFontSize\n  'description.weight': 'w2', // descriptionWeight\n  'description.style': 's2', // descriptionStyle\n  'description.color': 'c4', // descriptionColor\n  'url.family': 'f3', // urlFont\n  'url.size': 'fs3', // urlFontSize\n  'url.weight': 'w3', // urlWeight\n  'url.style': 's3', // urlStyle\n  'url.color': 'c5', // urlColor\n  'colors.background': 'c2', // borderColor\n  'colors.border': 'c1', // borderColor\n  'colors.link': 'c6', // lnkColor\n};\n\nlet OrbitsoftAdapter = function OrbitsoftAdapter() {\n  let baseAdapter = new Adapter(ORBITSOFT_BIDDERCODE);\n\n  baseAdapter.callBids = function(params) {\n    let bids = params.bids || [];\n\n    for (let i = 0; i < bids.length; i++) {\n      let bidRequest = bids[i];\n      let callbackId = bidRequest.bidId;\n      let jptCall = buildJPTCall(bidRequest, callbackId);\n\n      if (jptCall) {\n        adloader.loadScript(jptCall);\n      } else {\n        // indicate that there is no bid for this placement\n        let bid = bidfactory.createBid(CONSTANTS.STATUS.NO_BID, bidRequest);\n        bid.bidderCode = params.bidderCode;\n        bidmanager.addBidResponse(bidRequest.placementCode, bid);\n      }\n    }\n  }\n\n  function buildJPTCall(bid, callbackId) {\n    // Determine tag params\n    let placementId = utils.getBidIdParameter('placementId', bid.params);\n\n    let referrer = utils.getBidIdParameter('ref', bid.params);\n    let location = utils.getBidIdParameter('loc', bid.params);\n    let jptCall = utils.getBidIdParameter('requestUrl', bid.params);\n    if (jptCall.length === 0) {\n      // No param requestUrl\n      // @if NODE_ENV='debug'\n      utils.logMessage('No param requestUrl');\n      // @endif\n      return null;\n    } else {\n      jptCall += '?';\n    }\n\n    jptCall = utils.tryAppendQueryString(jptCall, 'callback', 'pbjs.handleOASCB');\n    jptCall = utils.tryAppendQueryString(jptCall, 'callback_uid', callbackId);\n    jptCall = utils.tryAppendQueryString(jptCall, 'scid', placementId);\n\n    // Sizes takes a bit more logic\n    let sizeQueryString;\n    let parsedSizes = utils.parseSizesInput(bid.sizes);\n\n    // Combine string into proper query string\n    let parsedSizesLength = parsedSizes.length;\n    if (parsedSizesLength > 0) {\n      // First value should be \"size\"\n      sizeQueryString = 'size=' + parsedSizes[0];\n      jptCall += sizeQueryString + '&';\n    }\n\n    // Append custom attributes:\n    let paramsCopy = Object.assign({}, bid.params);\n\n    // Delete attributes already used\n    delete paramsCopy.placementId;\n    delete paramsCopy.referrer;\n    delete paramsCopy.style;\n    delete paramsCopy.customParams;\n\n    // Get the reminder\n    jptCall += utils.parseQueryStringParameters(paramsCopy);\n\n    // Append location & referrer\n    if (location === '') {\n      location = utils.getTopWindowUrl();\n    }\n    if (referrer === '') {\n      referrer = window.top.document.referrer;\n    }\n    jptCall = utils.tryAppendQueryString(jptCall, 'loc', location);\n    jptCall = utils.tryAppendQueryString(jptCall, 'ref', referrer);\n\n    // Remove the trailing \"&\"\n    jptCall = removeTrailingAmp(jptCall);\n\n    // @if NODE_ENV='debug'\n    utils.logMessage('jpt request built: ' + jptCall);\n    // @endif\n\n    // Append a timer here to track latency\n    bid.startTime = new Date().getTime();\n\n    return jptCall;\n  }\n\n  // Remove the trailing \"&\"\n  function removeTrailingAmp(url) {\n    if (url.lastIndexOf('&') === url.length - 1) {\n      url = url.substring(0, url.length - 1);\n    }\n    return url;\n  }\n\n  // Expose the callback to the global object\n  pbjs.handleOASCB = function (jptResponseObj) {\n    let bidCode;\n\n    if (jptResponseObj && jptResponseObj.callback_uid) {\n      let responseCPM;\n      let id = jptResponseObj.callback_uid;\n      let placementCode = '';\n      let bidObj = getBidRequest(id);\n      if (bidObj) {\n        bidCode = bidObj.bidder;\n\n        placementCode = bidObj.placementCode;\n\n        // Set the status\n        bidObj.status = CONSTANTS.STATUS.GOOD;\n      }\n\n      // @if NODE_ENV='debug'\n      utils.logMessage('JSONP callback function called for ad ID: ' + id);\n      // @endif\n\n      let bid = [];\n      if (jptResponseObj.cpm && jptResponseObj.cpm !== 0) {\n        // Store bid response\n        responseCPM = jptResponseObj.cpm;\n        // Bid status is good (indicating 1)\n        bid = bidfactory.createBid(CONSTANTS.STATUS.GOOD, bidObj);\n        bid.bidderCode = bidCode;\n        bid.cpm = responseCPM;\n        bid.adUrl = jptResponseObj.content_url;\n        bid.width = jptResponseObj.width;\n        bid.height = jptResponseObj.height;\n\n        // Styles params\n        let styles = utils.getBidIdParameter('style', bidObj.params);\n        let stylesParams = {};\n        for (let currentValue in styles) {\n          if (styles.hasOwnProperty(currentValue)) {\n            let currentStyle = styles[currentValue];\n            for (let field in currentStyle) {\n              if (currentStyle.hasOwnProperty(field)) {\n                let styleField = styleParamsToFieldsMap[currentValue + '.' + field];\n                if (styleField !== undefined) {\n                  stylesParams[styleField] = currentStyle[field];\n                }\n              }\n            }\n          }\n        }\n        bid.adUrl += '&' + utils.parseQueryStringParameters(stylesParams);\n\n        // Custom params\n        let customParams = utils.getBidIdParameter('customParams', bidObj.params);\n        let customParamsArray = {};\n        for (let customField in customParams) {\n          if (customParams.hasOwnProperty(customField)) {\n            customParamsArray['c.' + customField] = customParams[customField];\n          }\n        }\n        let customParamsLink = utils.parseQueryStringParameters(customParamsArray);\n        if (customParamsLink) {\n          // Don't append a \"&\" here, we have already done it in parseQueryStringParameters\n          bid.adUrl += customParamsLink;\n        }\n\n        // Remove the trailing \"&\"\n        bid.adUrl = removeTrailingAmp(bid.adUrl);\n\n        bidmanager.addBidResponse(placementCode, bid);\n      } else {\n        // No response data\n        // @if NODE_ENV='debug'\n        utils.logMessage('No prebid response from Orbitsoft for placement code ' + placementCode);\n        // @endif\n        // indicate that there is no bid for this placement\n        bid = bidfactory.createBid(CONSTANTS.STATUS.NO_BID, bidObj);\n        bid.bidderCode = bidCode;\n        bidmanager.addBidResponse(placementCode, bid);\n      }\n    } else {\n      // No response data\n      // @if NODE_ENV='debug'\n      utils.logMessage('No prebid response for placement');\n      // @endif\n    }\n  };\n\n  return Object.assign(this, {\n    callBids: baseAdapter.callBids,\n    setBidderCode: baseAdapter.setBidderCode,\n    buildJPTCall: buildJPTCall\n  });\n};\n\nadaptermanager.registerBidAdapter(new OrbitsoftAdapter(), ORBITSOFT_BIDDERCODE);\n\nmodule.exports = OrbitsoftAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/orbitsoftBidAdapter.js"],"sourceRoot":""}