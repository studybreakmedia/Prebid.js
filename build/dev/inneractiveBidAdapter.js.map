{"version":3,"sources":["webpack:///./modules/inneractiveBidAdapter.js"],"names":["utils","CONSTANTS","ADAPTER_NAME","V","RECTANGLE_SIZE","W","H","SPOT_TYPES","INTERSTITIAL","RECTANGLE","FLOATING","BANNER","DISPLAY_AD","ENDPOINT_URL","EVENTS_ENDPOINT_URL","RESPONSE_HEADERS_NAME","PRICING_VALUE","AD_H","AD_W","iaRef","window","top","document","referrer","e","Helpers","defaultsQsParams","v","page","encodeURIComponent","getTopWindowUrl","mw","hb","stringToCamel","str","indexOf","first","charAt","toLowerCase","replace","$1","toUpperCase","objectToCamel","params","Object","keys","forEach","keyCamelCase","key","Tracker","fire","urls","url","Image","src","encodeURI","Reporter","errorEventName","pageProtocol","getPageProtocol","getTopWindowLocation","protocol","getEventUrl","evtName","extraDetails","eventsEndpoint","queryStringParams","eventQueryStringParams","appId","queryStringParamsWithAID","reportEvent","createTrackingPixel","defaults","toQS","realAppId","timestamp","Date","now","urlWithoutProtocol","Url","defaultsParams","f","fs","ref","serverParamNameBySettingParamName","keywords","portal","age","gender","unwantedValues","undefined","toServerParams","serverParams","paramName","hasOwnProperty","isSecured","getUrlParams","toQueryString","spotType","rw","rh","pbjs","bco","cbTimeout","getConfig","qa","Http","headers","getBidHeaders","xhr","headersData","headerName","getResponseHeader","InnerActiveAdapter","iaAdapter","setBidderCode","bind","bidByBidId","adSettings","logError","bid","bidId","bidStatus","bidResponse","createBid","code","bidderCode","GOOD","_setBidCpm","storedBid","cpm","isNaN","parseFloat","responseAsJson","ad","html","response","sizes","w","h","size","JSON","parse","error","_isValidBidResponse","errorMessage","passback","config","addBidResponse","placementCode","_getBidDetails","NO_BID","width","_getAd","tracking","height","auctionBid","adId","adHtml","bidParams","impressionsHtml","Array","isArray","impressions","push","impression","createTrackPixelHtml","clicks","adTemplate","bidParamsWithCustomParams","customParams","bidRequest","bids","_toIaBidParams","filter","_isValidRequest","map","_storeBidRequestDetails","_getEndpointUrl","_onResponse","method","storedBids","registerBidAdapter","module","exports"],"mappings":"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","file":"inneractiveBidAdapter.js","sourcesContent":["import * as utils from 'src/utils';\nimport Adapter from 'src/adapter';\nimport {ajax} from 'src/ajax';\nimport bidManager from 'src/bidmanager';\nimport bidFactory from 'src/bidfactory';\nimport {STATUS} from 'src/constants';\nimport {formatQS} from 'src/url';\nimport adaptermanager from 'src/adaptermanager';\nimport { config } from 'src/config';\n\n/**\n * @type {{IA_JS: string, ADAPTER_NAME: string, V: string, RECTANGLE_SIZE: {W: number, H: number}, SPOT_TYPES: {INTERSTITIAL: string, RECTANGLE: string, FLOATING: string, BANNER: string}, DISPLAY_AD: number, ENDPOINT_URL: string, EVENTS_ENDPOINT_URL: string, RESPONSE_HEADERS_NAME: {PRICING_VALUE: string, AD_H: string, AD_W: string}}}\n */\nconst CONSTANTS = {\n  ADAPTER_NAME: 'inneractive',\n  V: 'IA-JS-HB-PBJS-1.0',\n  RECTANGLE_SIZE: {W: 300, H: 250},\n\n  SPOT_TYPES: {\n    INTERSTITIAL: 'interstitial',\n    RECTANGLE: 'rectangle',\n    FLOATING: 'floating',\n    BANNER: 'banner'\n  },\n\n  DISPLAY_AD: 20,\n  ENDPOINT_URL: '//ad-tag.inner-active.mobi/simpleM2M/requestJsonAd',\n  EVENTS_ENDPOINT_URL: '//vast-events.inner-active.mobi/Event',\n  RESPONSE_HEADERS_NAME: {\n    PRICING_VALUE: 'X-IA-Pricing-Value',\n    AD_H: 'X-IA-Ad-Height',\n    AD_W: 'X-IA-Ad-Width'\n  }\n};\n\nlet iaRef;\ntry {\n  iaRef = window.top.document.referrer;\n} catch (e) {\n  iaRef = window.document.referrer;\n}\n\n/**\n * gloable util functions\n * @type {{defaultsQsParams: {v: (string|string), page: string, mw: boolean, hb: string}, stringToCamel: (function(*)), objectToCamel: (function(*=))}}\n */\nconst Helpers = {\n  defaultsQsParams: {v: CONSTANTS.V, page: encodeURIComponent(utils.getTopWindowUrl()), mw: true, hb: 'prebidjs'},\n  /**\n   * Change string format from underscore to camelcase (e.g., APP_ID to appId)\n   * @param str: string\n   * @returns string\n   */\n  stringToCamel(str) {\n    if (str.indexOf('_') === -1) {\n      const first = str.charAt(0);\n      if (first !== first.toLowerCase()) {\n        str = str.toLowerCase();\n      }\n      return str;\n    }\n\n    str = str.toLowerCase();\n    return str.replace(/(\\_[a-z])/g, $1 => $1.toUpperCase().replace('_', ''));\n  },\n\n  /**\n   * Change all object keys string format from underscore to camelcase (e.g., {'APP_ID' : ...} to {'appId' : ...})\n   * @param params: object\n   * @returns object\n   */\n  objectToCamel(params) {\n    Object.keys(params).forEach(key => {\n      const keyCamelCase = this.stringToCamel(key);\n      if (keyCamelCase !== key) {\n        params[keyCamelCase] = params[key];\n        delete params[key];\n      }\n    });\n    return params;\n  }\n};\n\n/**\n * Tracking pixels for events\n * @type {{fire: (function(*=))}}\n */\nconst Tracker = {\n  /**\n   * Creates a tracking pixel\n   * @param urls: Array<String>\n   */\n  fire(urls) {\n    urls.forEach(url => url && ((new Image(1, 1)).src = encodeURI(url)));\n  }\n};\n\n/**\n * Analytics\n * @type {{errorEventName: string, pageProtocol: string, getPageProtocol: (function(): string), getEventUrl: (function(*, *=)), reportEvent: (function(string, Object)), defaults: {v: (string|string), page: string, mw: boolean, hb: string}, eventQueryStringParams: (function(Object): string), createTrackingPixel: (function(string))}}\n */\nconst Reporter = {\n  /**\n   * @private\n   */\n  errorEventName: 'HBPreBidError',\n  pageProtocol: '',\n\n  /**\n   * Gets the page protocol based on the <code>document.location.protocol</code>\n   * The returned string is either <code>http://</code> or <code>https://</code>\n   * @returns {string}\n   */\n  getPageProtocol() {\n    if (!this.pageProtocol) {\n      this.pageProtocol = (utils.getTopWindowLocation().protocol === 'http:' ? 'http:' : 'https:');\n    }\n    return this.pageProtocol;\n  },\n\n  getEventUrl(evtName, extraDetails) {\n    let eventsEndpoint = CONSTANTS.EVENTS_ENDPOINT_URL + '?table=' + ((evtName === this.errorEventName) ? 'mbwError' : 'mbwEvent');\n    let queryStringParams = this.eventQueryStringParams(extraDetails);\n    const appId = extraDetails && extraDetails.appId;\n    let queryStringParamsWithAID = `${queryStringParams}&aid=${appId}_${evtName}_other&evtName=${evtName}`;\n    return eventsEndpoint + '&' + queryStringParamsWithAID;\n  },\n\n  /**\n   * Reports an event to IA's servers.\n   * @param {string} evtName - event name as string.\n   * @param {object} extraDetails - e.g., a JS exception JSON object.\n   * @param shouldSendOnlyToNewEndpoint\n   */\n  reportEvent(evtName, extraDetails) {\n    const url = this.getEventUrl(evtName, extraDetails);\n    this.createTrackingPixel(url);\n  },\n  defaults: Helpers.defaultsQsParams,\n\n  /**\n   * Ia Event Reporting Query String Parameters, not including App Id.\n   * @param {object} extraDetails - e.g., a JS exception JSON object.\n   * @return {string} IA event contcatenated queryString parameters.\n   */\n  eventQueryStringParams(extraDetails) {\n    const toQS = Object.assign({}, this.defaults, {realAppId: extraDetails && extraDetails.appId, timestamp: Date.now()});\n    return formatQS(toQS);\n  },\n\n  /**\n   * Creates a tracking pixel by prepending the page's protocol to the URL sent as the param.\n   * @param {string} urlWithoutProtocol - the URL to send the tracking pixel to, without the protocol as a prefix.\n   */\n  createTrackingPixel(urlWithoutProtocol) {\n    Tracker.fire([this.getPageProtocol() + urlWithoutProtocol]);\n  }\n};\n\n/**\n * Url generator - generates a request URL\n * @type {{defaultsParams: *, serverParamNameBySettingParamName: {referrer: string, keywords: string, appId: string, portal: string, age: string, gender: string, isSecured: (boolean|null)}, toServerParams: (function(*)), unwantedValues: *[], getUrlParams: (function(*=))}}\n */\nconst Url = {\n  defaultsParams: Object.assign({}, Helpers.defaultsQsParams, {f: CONSTANTS.DISPLAY_AD, fs: false, ref: iaRef}),\n  serverParamNameBySettingParamName: {\n    referrer: 'ref',\n    keywords: 'k',\n    appId: 'aid',\n    portal: 'po',\n    age: 'a',\n    gender: 'g',\n  },\n  unwantedValues: ['', null, undefined],\n\n  /**\n   * Maps publisher params to server params\n   * @param params: object {k:v}\n   * @returns object {k:v}\n   */\n  toServerParams(params) {\n    const serverParams = {};\n    for (const paramName in params) {\n      if (params.hasOwnProperty(paramName) && this.serverParamNameBySettingParamName.hasOwnProperty(paramName)) {\n        serverParams[this.serverParamNameBySettingParamName[paramName]] = params[paramName];\n      } else {\n        serverParams[paramName] = params[paramName];\n      }\n    }\n\n    serverParams.isSecured = Reporter.getPageProtocol() === 'https:' || null;\n    return serverParams;\n  },\n\n  /**\n   * Prepare querty string to ad server\n   * @param params: object {k:v}\n   * @returns : object {k:v}\n   */\n  getUrlParams(params) {\n    const serverParams = this.toServerParams(params);\n    const toQueryString = Object.assign({}, this.defaultsParams, serverParams);\n    for (const paramName in toQueryString) {\n      if (toQueryString.hasOwnProperty(paramName) && this.unwantedValues.indexOf(toQueryString[paramName]) !== -1) {\n        delete toQueryString[paramName];\n      }\n    }\n    toQueryString.fs = params.spotType === CONSTANTS.SPOT_TYPES.INTERSTITIAL;\n\n    if (params.spotType === CONSTANTS.SPOT_TYPES.RECTANGLE) {\n      toQueryString.rw = CONSTANTS.RECTANGLE_SIZE.W;\n      toQueryString.rh = CONSTANTS.RECTANGLE_SIZE.H;\n    }\n\n    if (typeof pbjs !== 'undefined') {\n      toQueryString.bco = pbjs.cbTimeout || config.getConfig('bidderTimeout');\n    }\n\n    toQueryString.timestamp = Date.now();\n    delete toQueryString.qa;\n    return toQueryString;\n  }\n};\n\n/**\n * Http helper to extract metadata\n * @type {{headers: *[], getBidHeaders: (function(*))}}\n */\nconst Http = {\n  headers: [\n    CONSTANTS.RESPONSE_HEADERS_NAME.PRICING_VALUE,\n    CONSTANTS.RESPONSE_HEADERS_NAME.AD_H,\n    CONSTANTS.RESPONSE_HEADERS_NAME.AD_W\n  ],\n\n  /**\n   * Extract headers data\n   * @param xhr: XMLHttpRequest\n   * @returns {}\n   */\n  getBidHeaders(xhr) {\n    const headersData = {};\n    this.headers.forEach(headerName => headersData[headerName] = xhr.getResponseHeader(headerName));\n    return headersData;\n  }\n};\n\n/**\n * InnerActiveAdapter for requesting bids\n * @class\n */\nclass InnerActiveAdapter {\n  constructor() {\n    this.iaAdapter = new Adapter(CONSTANTS.ADAPTER_NAME);\n    this.setBidderCode = this.iaAdapter.setBidderCode.bind(this);\n\n    this.bidByBidId = {};\n  }\n\n  /**\n   * validate if bid request is valid\n   * @param adSettings: object\n   * @returns {boolean}\n   * @private\n   */\n  _isValidRequest(adSettings) {\n    if (adSettings && adSettings.appId && adSettings.spotType) {\n      return true;\n    }\n    utils.logError('bid requires appId');\n    return false;\n  }\n\n  /**\n   * Store the bids in a Map object (k: bidId, v: bid)to check later if won\n   * @param bid\n   * @returns bid object\n   * @private\n   */\n  _storeBidRequestDetails(bid) {\n    this.bidByBidId[bid.bidId] = bid;\n    return bid;\n  }\n\n  /**\n   * @param bidStatus: int (\"STATUS\": {\"GOOD\": 1,\"NO_BID\": 2})\n   * @param bidResponse: object\n   * @returns {type[]}\n   * @private\n   */\n  _getBidDetails(bidStatus, bidResponse, bidId) {\n    let bid = bidFactory.createBid(bidStatus, bidResponse);\n    bid.code = CONSTANTS.ADAPTER_NAME;\n    bid.bidderCode = bid.code;\n    if (bidStatus === STATUS.GOOD) {\n      bid = Object.assign(bid, bidResponse);\n      this._setBidCpm(bid, bidId);\n    }\n    return bid;\n  }\n\n  _setBidCpm(bid, bidId) {\n    const storedBid = this.bidByBidId[bidId];\n    if (storedBid) {\n      bid.cpm = (storedBid.params && storedBid.params.qa && storedBid.params.qa.cpm) || bid.cpm;\n      bid.cpm = (bid.cpm !== null && !isNaN(bid.cpm)) ? parseFloat(bid.cpm) : 0.0;\n    }\n  }\n\n  /**\n   * Validate if response is valid\n   * @param responseAsJson : object\n   * @param headersData: {}\n   * @returns {boolean}\n   * @private\n   */\n  _isValidBidResponse(responseAsJson, headersData) {\n    return (responseAsJson && responseAsJson.ad && responseAsJson.ad.html && headersData && headersData[CONSTANTS.RESPONSE_HEADERS_NAME.PRICING_VALUE] > 0);\n  }\n\n  /**\n   * When response is received\n   * @param response: string(json format)\n   * @param xhr: XMLHttpRequest\n   * @param bidId: string\n   * @private\n   */\n  _onResponse(response, xhr, bidId) {\n    const bid = this.bidByBidId[bidId];\n    const [w, h] = bid.sizes[0];\n    const size = {w, h};\n    let responseAsJson;\n    const headersData = Http.getBidHeaders(xhr);\n    try {\n      responseAsJson = JSON.parse(response);\n    } catch (error) {\n      utils.logError(error);\n    }\n\n    if (!this._isValidBidResponse(responseAsJson, headersData)) {\n      let errorMessage = `response failed for ${CONSTANTS.ADAPTER_NAME} adapter`;\n      utils.logError(errorMessage);\n      const passback = responseAsJson && responseAsJson.config && responseAsJson.config.passback;\n      if (passback) {\n        Tracker.fire([passback]);\n      }\n      Reporter.reportEvent('HBPreBidNoAd', bid.params);\n      return bidManager.addBidResponse(bid.placementCode, this._getBidDetails(STATUS.NO_BID));\n    }\n    const bidResponse = {\n      cpm: headersData[CONSTANTS.RESPONSE_HEADERS_NAME.PRICING_VALUE] * 1000,\n      width: parseFloat(headersData[CONSTANTS.RESPONSE_HEADERS_NAME.AD_W]) || size.w,\n      ad: this._getAd(responseAsJson.ad.html, responseAsJson.config.tracking, bid.params),\n      height: parseFloat(headersData[CONSTANTS.RESPONSE_HEADERS_NAME.AD_H]) || size.h\n    };\n    const auctionBid = this._getBidDetails(STATUS.GOOD, bidResponse, bidId);\n    bid.adId = auctionBid.adId;\n    this.bidByBidId[bidId] = bid;\n    bidManager.addBidResponse(bid.placementCode, auctionBid);\n  }\n\n  /**\n   * Returns the ad HTML template\n   * @param adHtml: string {ad server creative}\n   * @param tracking: object {impressions, clicks}\n   * @param bidParams: object\n   * @returns {string}: create template\n   * @private\n   */\n  _getAd(adHtml, tracking, bidParams) {\n    let impressionsHtml = '';\n    if (tracking && Array.isArray(tracking.impressions)) {\n      let impressions = tracking.impressions;\n      impressions.push(Reporter.getEventUrl('HBPreBidImpression', bidParams, false));\n      impressions.forEach(impression => impression && (impressionsHtml += utils.createTrackPixelHtml(impression)));\n    }\n    adHtml = impressionsHtml + adHtml.replace(/<a /g, '<a target=\"_blank\" ');\n    let clicks = tracking && Array.isArray(tracking.clicks) && tracking.clicks;\n    if (clicks && Array.isArray(clicks)) {\n      clicks.push(Reporter.getEventUrl('HBPreBidClick', bidParams, false));\n    }\n    const adTemplate = `\n      <html>\n        <head>\n            <script type='text/javascript'>inDapIF=true;</script>\n        </head>\n        <body style='margin : 0; padding: 0;'>\n            <div id=\"iaAdContainer\">${adHtml}</div>\n            <script type='text/javascript'>\n                var iaAdContainer = document.getElementById('iaAdContainer');\n                if(iaAdContainer){\n                    var clicks = '${clicks}';\n                    if(clicks){\n                      clicks = clicks.split(',');\n                      iaAdContainer.addEventListener('click', function onIaContainerClick(){\n                          clicks.forEach(function forEachClick(click){\n                              if(click){\n                                  (new Image(1,1)).src = encodeURI(click);\n                              }\n                          });\n                      });\n                    }\n                }\n            </script>\n        </body>\n      </html>`;\n    return adTemplate;\n  }\n  /**\n   * Adjust bid params to ia-ad-server params\n   * @param bid: object\n   * @private\n   */\n  _toIaBidParams(bid) {\n    const bidParamsWithCustomParams = Object.assign({}, bid.params, bid.params.customParams);\n    delete bidParamsWithCustomParams.customParams;\n    bid.params = Helpers.objectToCamel(bidParamsWithCustomParams);\n  }\n\n  /**\n   * Prebid executes for stating an auction\n   * @param bidRequest: object\n   */\n  callBids(bidRequest) {\n    const bids = bidRequest.bids || [];\n    bids.forEach(bid => this._toIaBidParams(bid));\n    bids\n      .filter(bid => this._isValidRequest(bid.params))\n      .map(bid => this._storeBidRequestDetails(bid))\n      .forEach(bid => ajax(this._getEndpointUrl(bid.params), (response, xhr) => this._onResponse(response, xhr, bid.bidId), Url.getUrlParams(bid.params), {method: 'GET'}));\n  }\n\n  _getEndpointUrl(params) {\n    return (params && params.qa && params.qa.url) || Reporter.getPageProtocol() + CONSTANTS.ENDPOINT_URL;\n  }\n\n  _getStoredBids() {\n    const storedBids = [];\n    for (const bidId in this.bidByBidId) {\n      if (this.bidByBidId.hasOwnProperty(bidId)) {\n        storedBids.push(this.bidByBidId[bidId]);\n      }\n    }\n    return storedBids;\n  }\n\n  /**\n   * Return internal object - testing\n   * @returns {{Reporter: {errorEventName: string, pageProtocol: string, getPageProtocol: (function(): string), getEventUrl: (function(*, *=)), reportEvent: (function(string, Object)), defaults: {v: (string|string), page: string, mw: boolean, hb: string}, eventQueryStringParams: (function(Object): string), createTrackingPixel: (function(string))}}}\n   * @private\n   */\n  static _getUtils() {\n    return {Reporter};\n  }\n}\n\nadaptermanager.registerBidAdapter(new InnerActiveAdapter(), 'inneractive');\n\nmodule.exports = InnerActiveAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/inneractiveBidAdapter.js"],"sourceRoot":""}