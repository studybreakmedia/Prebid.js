{"version":3,"sources":["webpack:///./modules/sonobiBidAdapter.js"],"names":["bidfactory","require","bidmanager","adloader","utils","adaptermanager","SonobiAdapter","keymakerAssoc","bidReqAssoc","_phone_in","request","trinity","adSlots","bids","bidderRequestId","ref","encodeURI","getTopWindowLocation","host","loadScript","JSON","stringify","_keymaker","_operator","keyring","_each","bidRequest","params","floor","slotIdentifier","ad_unit","placement_id","sizes","parseSizesInput","toString","isEmpty","logError","placementCode","bidId","args","test","charAt","length","_failure","cb_name","window","_trinity","response","slots","sbi_dc","bid","slot_id","sbi_aid","sbi_mouse","sbi_size","_success","_seraph","theOne","goodBid","createBid","sbi_dozer","dealId","bidderCode","ad","_creative","cpm","Number","width","split","height","addBidResponse","failBid","src","callBids","formRequest","parseResponse","success","failure","registerBidAdapter","module","exports"],"mappings":"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","file":"sonobiBidAdapter.js","sourcesContent":["var bidfactory = require('src/bidfactory.js');\nvar bidmanager = require('src/bidmanager.js');\nvar adloader = require('src/adloader.js');\nvar utils = require('src/utils');\nvar adaptermanager = require('src/adaptermanager');\n\nvar SonobiAdapter = function SonobiAdapter() {\n  var keymakerAssoc = {}; //  Remember placement codes for callback mapping\n  var bidReqAssoc = {}; //  Remember bids for bid complete reporting\n\n  function _phone_in(request) {\n    var trinity = 'https://apex.go.sonobi.com/trinity.js?key_maker=';\n    var adSlots = request.bids || [];\n    var bidderRequestId = request.bidderRequestId;\n    var ref = '&ref=' + encodeURI(utils.getTopWindowLocation().host);\n    adloader.loadScript(trinity + JSON.stringify(_keymaker(adSlots)) + '&cv=' + _operator(bidderRequestId) + ref);\n  }\n\n  function _keymaker(adSlots) {\n    var keyring = {};\n    utils._each(adSlots, function(bidRequest) {\n      if (bidRequest.params) {\n        //  Optional\n        var floor = (bidRequest.params.floor) ? bidRequest.params.floor : null;\n        //  Mandatory\n        var slotIdentifier = (bidRequest.params.ad_unit) ? bidRequest.params.ad_unit : (bidRequest.params.placement_id) ? bidRequest.params.placement_id : null;\n        var sizes = (bidRequest.params.sizes) ? bidRequest.params.sizes : bidRequest.sizes || null;\n        sizes = utils.parseSizesInput(sizes).toString();\n\n        if (utils.isEmpty(sizes)) {\n          utils.logError('Sonobi adapter expects sizes for ' + bidRequest.placementCode);\n        }\n\n        var bidId = bidRequest.bidId;\n\n        var args = (sizes) ? ((floor) ? (sizes + '|f=' + floor) : (sizes)) : (floor) ? ('f=' + floor) : '';\n        if (/^[\\/]?[\\d]+[[\\/].+[\\/]?]?$/.test(slotIdentifier)) {\n          slotIdentifier = slotIdentifier.charAt(0) === '/' ? slotIdentifier : '/' + slotIdentifier;\n          keyring[slotIdentifier + '|' + bidId] = args;\n          keymakerAssoc[slotIdentifier + '|' + bidId] = bidRequest.placementCode;\n          bidReqAssoc[bidRequest.placementCode] = bidRequest;\n        } else if (/^[0-9a-fA-F]{20}$/.test(slotIdentifier) && slotIdentifier.length === 20) {\n          keyring[bidId] = slotIdentifier + '|' + args;\n          keymakerAssoc[bidId] = bidRequest.placementCode;\n          bidReqAssoc[bidRequest.placementCode] = bidRequest;\n        } else {\n          keymakerAssoc[bidId] = bidRequest.placementCode;\n          bidReqAssoc[bidRequest.placementCode] = bidRequest;\n          _failure(bidRequest.placementCode);\n          utils.logError('The ad unit code or Sonobi Placement id for slot ' + bidRequest.placementCode + ' is invalid');\n        }\n      }\n    });\n    return keyring;\n  }\n\n  function _operator(bidderRequestId) {\n    var cb_name = 'sbi_' + bidderRequestId;\n    window[cb_name] = _trinity;\n    return cb_name;\n  }\n\n  function _trinity(response) {\n    var slots = response.slots || {};\n    var sbi_dc = response.sbi_dc || '';\n    utils._each(slots, function(bid, slot_id) {\n      var placementCode = keymakerAssoc[slot_id];\n      if (bid.sbi_aid && bid.sbi_mouse && bid.sbi_size) {\n        _success(placementCode, sbi_dc, bid);\n      } else {\n        _failure(placementCode);\n      }\n      delete keymakerAssoc[slot_id];\n    });\n  }\n\n  function _seraph(placementCode) {\n    var theOne = bidReqAssoc[placementCode];\n    delete bidReqAssoc[placementCode];\n    return theOne;\n  }\n\n  function _success(placementCode, sbi_dc, bid) {\n    var goodBid = bidfactory.createBid(1, _seraph(placementCode));\n    if (bid.sbi_dozer) {\n      goodBid.dealId = bid.sbi_dozer;\n    }\n    goodBid.bidderCode = 'sonobi';\n    goodBid.ad = _creative(sbi_dc, bid.sbi_aid);\n    goodBid.cpm = Number(bid.sbi_mouse);\n    goodBid.width = Number(bid.sbi_size.split('x')[0]) || 1;\n    goodBid.height = Number(bid.sbi_size.split('x')[1]) || 1;\n    bidmanager.addBidResponse(placementCode, goodBid);\n  }\n\n  function _failure(placementCode) {\n    var failBid = bidfactory.createBid(2, _seraph(placementCode));\n    failBid.bidderCode = 'sonobi';\n    bidmanager.addBidResponse(placementCode, failBid);\n  }\n\n  function _creative(sbi_dc, sbi_aid) {\n    var src = 'https://' + sbi_dc + 'apex.go.sonobi.com/sbi.js?aid=' + sbi_aid + '&as=null';\n    return '<script type=\"text/javascript\" src=\"' + src + '\"></script>';\n  }\n\n  return {\n    callBids: _phone_in,\n    formRequest: _keymaker,\n    parseResponse: _trinity,\n    success: _success,\n    failure: _failure\n  };\n};\n\nadaptermanager.registerBidAdapter(new SonobiAdapter(), 'sonobi');\n\nmodule.exports = SonobiAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/sonobiBidAdapter.js"],"sourceRoot":""}