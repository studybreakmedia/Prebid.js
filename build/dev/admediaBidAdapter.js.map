{"version":3,"sources":["webpack:///./modules/admediaBidAdapter.js"],"names":["bidfactory","require","bidmanager","adloader","utils","CONSTANTS","adaptermanager","AdmediaAdapter","_callBids","params","bids","bidderUrl","window","location","protocol","i","length","request_obj","bid","aid","logError","page_url","test_ad","parsedSizes","parseSizesInput","sizes","parsedSizesLength","size","promo_sizes","j","push","join","siteDomain","host","sitePage","href","siteRef","document","referrer","topUrl","getTopWindowUrl","callback","callbackId","bidId","endpoint","parseQueryStringParameters","loadScript","pbjs","admediaHandler","response","bidObject","callback_id","placementCode","bidObj","cpm","ad","createBid","STATUS","GOOD","bidderCode","bidder","parseFloat","width","height","NO_BID","logMessage","addBidResponse","callBids","registerBidAdapter","module","exports"],"mappings":"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","file":"admediaBidAdapter.js","sourcesContent":["import { getBidRequest } from 'src/utils';\nvar bidfactory = require('src/bidfactory.js');\nvar bidmanager = require('src/bidmanager.js');\nvar adloader = require('src/adloader.js');\nvar utils = require('src/utils.js');\nvar CONSTANTS = require('src/constants.json');\nvar adaptermanager = require('src/adaptermanager');\n\n/**\n * Adapter for requesting bids from AdMedia.\n *\n */\nvar AdmediaAdapter = function AdmediaAdapter() {\n  function _callBids(params) {\n    var bids;\n    const bidderUrl = (window.location.protocol) + '//b.admedia.com/banner/prebid/bidder/?';\n    bids = params.bids || [];\n    for (var i = 0; i < bids.length; i++) {\n      var request_obj = {};\n      var bid = bids[i];\n\n      if (bid.params.aid) {\n        request_obj.aid = bid.params.aid;\n      } else {\n        utils.logError('required param aid is missing', 'admedia');\n        continue;\n      }\n\n      // optional page_url macro\n      if (bid.params.page_url) {\n        request_obj.page_url = bid.params.page_url;\n      }\n\n      // if set, return a test ad for all aids\n      if (bid.params.test_ad === 1) {\n        request_obj.test_ad = 1;\n      }\n\n      var parsedSizes = utils.parseSizesInput(bid.sizes);\n      var parsedSizesLength = parsedSizes.length;\n      if (parsedSizesLength > 0) {\n        // first value should be \"size\"\n        request_obj.size = parsedSizes[0];\n        if (parsedSizesLength > 1) {\n          // any subsequent values should be \"promo_sizes\"\n          var promo_sizes = [];\n          for (var j = 1; j < parsedSizesLength; j++) {\n            promo_sizes.push(parsedSizes[j]);\n          }\n\n          request_obj.promo_sizes = promo_sizes.join(',');\n        }\n      }\n\n      // detect urls\n      request_obj.siteDomain = window.location.host;\n      request_obj.sitePage = window.location.href;\n      request_obj.siteRef = document.referrer;\n      request_obj.topUrl = utils.getTopWindowUrl();\n\n      request_obj.callback = 'pbjs';\n      request_obj.callbackId = bid.bidId;\n\n      var endpoint = bidderUrl + utils.parseQueryStringParameters(request_obj);\n\n      // utils.logMessage('Admedia request built: ' + endpoint);\n\n      adloader.loadScript(endpoint);\n    }\n  }\n\n  // expose the callback to global object\n  pbjs.admediaHandler = function(response) {\n    var bidObject = {};\n    var callback_id = response.callback_id;\n    var placementCode = '';\n    var bidObj = getBidRequest(callback_id);\n    if (bidObj) {\n      placementCode = bidObj.placementCode;\n    }\n\n    if (bidObj && response.cpm > 0 && !!response.ad) {\n      bidObject = bidfactory.createBid(CONSTANTS.STATUS.GOOD);\n      bidObject.bidderCode = bidObj.bidder;\n      bidObject.cpm = parseFloat(response.cpm);\n      bidObject.ad = response.ad;\n      bidObject.width = response.width;\n      bidObject.height = response.height;\n    } else {\n      bidObject = bidfactory.createBid(CONSTANTS.STATUS.NO_BID);\n      bidObject.bidderCode = bidObj.bidder;\n      utils.logMessage('No prebid response from Admedia for placement code ' + placementCode);\n    }\n\n    bidmanager.addBidResponse(placementCode, bidObject);\n  };\n\n  // Export the callBids function, so that prebid.js can execute this function\n  // when the page asks to send out bid requests.\n  return {\n    callBids: _callBids\n  };\n};\n\nadaptermanager.registerBidAdapter(new AdmediaAdapter(), 'admedia');\n\nmodule.exports = AdmediaAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/admediaBidAdapter.js"],"sourceRoot":""}