{"version":3,"sources":["webpack:///./modules/beachfrontBidAdapter.js"],"names":["utils","ENDPOINT","spec","code","supportedMediaTypes","isBidRequestValid","bid","params","appId","bidfloor","buildRequests","bids","map","method","url","data","createRequestParams","bidRequest","interpretResponse","response","body","bidPrice","logWarn","size","getSize","sizes","requestId","bidId","bidderCode","cpm","creativeId","cmpId","vastUrl","width","height","mediaType","currency","ttl","netRevenue","parsedSizes","parseSizesInput","length","split","parseInt","undefined","isMobile","test","global","navigator","userAgent","isConnectedTV","isPrebid","domain","document","location","hostname","imp","video","w","h","site","page","getTopWindowLocation","host","device","ua","devicetype","cur"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;IAAYA,K;;AACZ;;;;AAEO,IAAMC,8BAAW,2CAAjB;;AAEA,IAAMC,sBAAO;AAClBC,QAAM,YADY;AAElBC,uBAAqB,CAAC,OAAD,CAFH;;AAIlBC,mBAJkB,6BAIAC,GAJA,EAIK;AACrB,WAAO,CAAC,EAAEA,OAAOA,IAAIC,MAAX,IAAqBD,IAAIC,MAAJ,CAAWC,KAAhC,IAAyCF,IAAIC,MAAJ,CAAWE,QAAtD,CAAR;AACD,GANiB;AAQlBC,eARkB,yBAQJC,IARI,EAQE;AAClB,WAAOA,KAAKC,GAAL,CAAS,eAAO;AACrB,aAAO;AACLC,gBAAQ,MADH;AAELC,aAAKb,WAAWK,IAAIC,MAAJ,CAAWC,KAFtB;AAGLO,cAAMC,oBAAoBV,GAApB,CAHD;AAILW,oBAAYX;AAJP,OAAP;AAMD,KAPM,CAAP;AAQD,GAjBiB;AAmBlBY,mBAnBkB,6BAmBAC,QAnBA,QAmB0B;AAAA,QAAdF,UAAc,QAAdA,UAAc;;AAC1CE,eAAWA,SAASC,IAApB;AACA,QAAI,CAACD,QAAD,IAAa,CAACA,SAASL,GAAvB,IAA8B,CAACK,SAASE,QAA5C,EAAsD;AACpDrB,YAAMsB,OAAN,yBAAoCpB,KAAKC,IAAzC;AACA,aAAO,EAAP;AACD;AACD,QAAIoB,OAAOC,QAAQP,WAAWQ,KAAnB,CAAX;AACA,WAAO;AACLC,iBAAWT,WAAWU,KADjB;AAELC,kBAAY1B,KAAKC,IAFZ;AAGL0B,WAAKV,SAASE,QAHT;AAILS,kBAAYX,SAASY,KAJhB;AAKLC,eAASb,SAASL,GALb;AAMLmB,aAAOV,KAAKU,KANP;AAOLC,cAAQX,KAAKW,MAPR;AAQLC,iBAAW,OARN;AASLC,gBAAU,KATL;AAULC,WAAK,GAVA;AAWLC,kBAAY;AAXP,KAAP;AAaD;AAvCiB,CAAb;;AA0CP,SAASd,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,MAAIc,cAAcvC,MAAMwC,eAAN,CAAsBf,KAAtB,CAAlB;;AADsB,cAEEc,YAAYE,MAAZ,GAAqBF,YAAY,CAAZ,EAAeG,KAAf,CAAqB,GAArB,CAArB,GAAiD,EAFnD;AAAA;AAAA,MAEhBT,KAFgB;AAAA,MAETC,MAFS;;AAGtB,SAAO;AACLD,WAAOU,SAASV,KAAT,EAAgB,EAAhB,KAAuBW,SADzB;AAELV,YAAQS,SAAST,MAAT,EAAiB,EAAjB,KAAwBU;AAF3B,GAAP;AAID;;AAED,SAASC,QAAT,GAAoB;AAClB,SAAQ,kCAAD,CAAoCC,IAApC,CAAyCC,OAAOC,SAAP,CAAiBC,SAA1D;AAAP;AACD;;AAED,SAASC,aAAT,GAAyB;AACvB,SAAQ,+GAAD,CAAiHJ,IAAjH,CAAsHC,OAAOC,SAAP,CAAiBC,SAAvI;AAAP;AACD;;AAED,SAASjC,mBAAT,CAA6BV,GAA7B,EAAkC;AAChC,MAAIiB,OAAOC,QAAQlB,IAAImB,KAAZ,CAAX;AACA,SAAO;AACL0B,cAAU,IADL;AAEL3C,WAAOF,IAAIC,MAAJ,CAAWC,KAFb;AAGL4C,YAAQC,SAASC,QAAT,CAAkBC,QAHrB;AAILC,SAAK,CAAC;AACJC,aAAO;AACLC,WAAGnC,KAAKU,KADH;AAEL0B,WAAGpC,KAAKW;AAFH,OADH;AAKJzB,gBAAUH,IAAIC,MAAJ,CAAWE;AALjB,KAAD,CAJA;AAWLmD,UAAM;AACJC,YAAM7D,MAAM8D,oBAAN,GAA6BC;AAD/B,KAXD;AAcLC,YAAQ;AACNC,UAAIlB,OAAOC,SAAP,CAAiBC,SADf;AAENiB,kBAAYrB,aAAa,CAAb,GAAiBK,kBAAkB,CAAlB,GAAsB;AAF7C,KAdH;AAkBLiB,SAAK,CAAC,KAAD;AAlBA,GAAP;AAoBD;;AAED,mCAAejE,IAAf,E","file":"beachfrontBidAdapter.js","sourcesContent":["import * as utils from 'src/utils';\nimport { registerBidder } from 'src/adapters/bidderFactory';\n\nexport const ENDPOINT = '//reachms.bfmio.com/bid.json?exchange_id=';\n\nexport const spec = {\n  code: 'beachfront',\n  supportedMediaTypes: ['video'],\n\n  isBidRequestValid(bid) {\n    return !!(bid && bid.params && bid.params.appId && bid.params.bidfloor);\n  },\n\n  buildRequests(bids) {\n    return bids.map(bid => {\n      return {\n        method: 'POST',\n        url: ENDPOINT + bid.params.appId,\n        data: createRequestParams(bid),\n        bidRequest: bid\n      };\n    });\n  },\n\n  interpretResponse(response, { bidRequest }) {\n    response = response.body;\n    if (!response || !response.url || !response.bidPrice) {\n      utils.logWarn(`No valid bids from ${spec.code} bidder`);\n      return [];\n    }\n    let size = getSize(bidRequest.sizes);\n    return {\n      requestId: bidRequest.bidId,\n      bidderCode: spec.code,\n      cpm: response.bidPrice,\n      creativeId: response.cmpId,\n      vastUrl: response.url,\n      width: size.width,\n      height: size.height,\n      mediaType: 'video',\n      currency: 'USD',\n      ttl: 300,\n      netRevenue: true\n    };\n  }\n};\n\nfunction getSize(sizes) {\n  let parsedSizes = utils.parseSizesInput(sizes);\n  let [ width, height ] = parsedSizes.length ? parsedSizes[0].split('x') : [];\n  return {\n    width: parseInt(width, 10) || undefined,\n    height: parseInt(height, 10) || undefined\n  };\n}\n\nfunction isMobile() {\n  return (/(ios|ipod|ipad|iphone|android)/i).test(global.navigator.userAgent);\n}\n\nfunction isConnectedTV() {\n  return (/(smart[-]?tv|hbbtv|appletv|googletv|hdmi|netcast\\.tv|viera|nettv|roku|\\bdtv\\b|sonydtv|inettvbrowser|\\btv\\b)/i).test(global.navigator.userAgent);\n}\n\nfunction createRequestParams(bid) {\n  let size = getSize(bid.sizes);\n  return {\n    isPrebid: true,\n    appId: bid.params.appId,\n    domain: document.location.hostname,\n    imp: [{\n      video: {\n        w: size.width,\n        h: size.height\n      },\n      bidfloor: bid.params.bidfloor\n    }],\n    site: {\n      page: utils.getTopWindowLocation().host\n    },\n    device: {\n      ua: global.navigator.userAgent,\n      devicetype: isMobile() ? 1 : isConnectedTV() ? 3 : 2\n    },\n    cur: ['USD']\n  };\n}\n\nregisterBidder(spec);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/beachfrontBidAdapter.js"],"sourceRoot":""}