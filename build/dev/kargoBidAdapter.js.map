{"version":3,"sources":["webpack:///./modules/kargoBidAdapter.js"],"names":["utils","BIDDER_CODE","HOST","spec","code","isBidRequestValid","bid","params","placementId","buildRequests","validBidRequests","bidderRequest","currency","getConfig","transformedParams","timeout","cpmGranularity","cpmRange","floor","ceil","adSlotIds","_map","_getAllMetadata","encodedParams","encodeURIComponent","JSON","stringify","method","url","data","interpretResponse","response","bidRequest","adUnits","body","bids","_each","bidResponses","adUnitId","adUnit","push","requestId","bidId","cpm","Number","width","height","ad","adm","ttl","creativeId","netRevenue","_readCookie","name","nameEquals","cookies","document","cookie","split","key","charAt","substring","length","indexOf","_getCrbIds","crb","parse","decodeURIComponent","syncIds","v","vParsed","atob","e","_getUid","uid","vData","_getKruxUserId","_getLocalStorageSafely","_getKruxSegments","_getKrux","segmentsStr","segments","userID","localStorage","getItem","_getUserIds","crbIds","kargoID","userId","clientID","clientId","crbIDs","optOut","userIDs","krux","pageURL","window","location","href","rawCRB"],"mappings":"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","file":"kargoBidAdapter.js","sourcesContent":["import * as utils from 'src/utils';\nimport {config} from 'src/config';\nimport {registerBidder} from 'src/adapters/bidderFactory';\nconst BIDDER_CODE = 'kargo';\nconst HOST = 'https://krk.kargo.com';\nexport const spec = {\n  code: BIDDER_CODE,\n  isBidRequestValid: function(bid) {\n    if (!bid || !bid.params) {\n      return false;\n    }\n    return !!bid.params.placementId;\n  },\n  buildRequests: function(validBidRequests, bidderRequest) {\n    const currency = config.getConfig('currency');\n    const transformedParams = Object.assign({}, {\n      timeout: bidderRequest.timeout,\n      currency: currency,\n      cpmGranularity: 1,\n      cpmRange: {\n        floor: 0,\n        ceil: 20\n      },\n      adSlotIds: utils._map(validBidRequests, bid => bid.params.placementId)\n    }, spec._getAllMetadata());\n    const encodedParams = encodeURIComponent(JSON.stringify(transformedParams));\n    return Object.assign({}, bidderRequest, {\n      method: 'GET',\n      url: `${HOST}/api/v1/bid`,\n      data: `json=${encodedParams}`,\n      currency: currency\n    });\n  },\n  interpretResponse: function(response, bidRequest) {\n    let adUnits = response.body;\n    let bids = {};\n    utils._each(bidRequest.bids, bid => bids[bid.params.placementId] = bid);\n    const bidResponses = [];\n    for (let adUnitId in adUnits) {\n      let adUnit = adUnits[adUnitId];\n      bidResponses.push({\n        requestId: bids[adUnitId].bidId,\n        cpm: Number(adUnit.cpm),\n        width: adUnit.width,\n        height: adUnit.height,\n        ad: adUnit.adm,\n        ttl: 300,\n        creativeId: adUnitId,\n        netRevenue: true,\n        currency: bidRequest.currency\n      });\n    }\n    return bidResponses;\n  },\n\n  // PRIVATE\n  _readCookie(name) {\n    let nameEquals = `${name}=`;\n    let cookies = document.cookie.split(';');\n\n    for (let key in cookies) {\n      let cookie = cookies[key];\n      while (cookie.charAt(0) === ' ') {\n        cookie = cookie.substring(1, cookie.length);\n      }\n\n      if (cookie.indexOf(nameEquals) === 0) {\n        return cookie.substring(nameEquals.length, cookie.length);\n      }\n    }\n\n    return null;\n  },\n\n  _getCrbIds() {\n    try {\n      const crb = JSON.parse(decodeURIComponent(spec._readCookie('krg_crb')));\n      let syncIds = {};\n\n      if (crb && crb.v) {\n        let vParsed = JSON.parse(atob(crb.v));\n\n        if (vParsed && vParsed.syncIds) {\n          syncIds = vParsed.syncIds;\n        }\n      }\n\n      return syncIds;\n    } catch (e) {\n      return {};\n    }\n  },\n\n  _getUid() {\n    try {\n      const uid = JSON.parse(decodeURIComponent(spec._readCookie('krg_uid')));\n      let vData = {};\n\n      if (uid && uid.v) {\n        vData = uid.v;\n      }\n\n      return vData;\n    } catch (e) {\n      return {};\n    }\n  },\n\n  _getKruxUserId() {\n    return spec._getLocalStorageSafely('kxkar_user');\n  },\n\n  _getKruxSegments() {\n    return spec._getLocalStorageSafely('kxkar_segs');\n  },\n\n  _getKrux() {\n    const segmentsStr = spec._getKruxSegments();\n    let segments = [];\n\n    if (segmentsStr) {\n      segments = segmentsStr.split(',');\n    }\n\n    return {\n      userID: spec._getKruxUserId(),\n      segments: segments\n    };\n  },\n\n  _getLocalStorageSafely(key) {\n    try {\n      return localStorage.getItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n\n  _getUserIds() {\n    const uid = spec._getUid();\n    const crbIds = spec._getCrbIds();\n\n    return {\n      kargoID: uid.userId,\n      clientID: uid.clientId,\n      crbIDs: crbIds,\n      optOut: uid.optOut\n    };\n  },\n\n  _getAllMetadata() {\n    return {\n      userIDs: spec._getUserIds(),\n      krux: spec._getKrux(),\n      pageURL: window.location.href,\n      rawCRB: spec._readCookie('krg_crb')\n    };\n  }\n};\nregisterBidder(spec);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/kargoBidAdapter.js"],"sourceRoot":""}