{"version":3,"sources":["webpack:///./modules/nginadBidAdapter.js"],"names":["CONSTANTS","require","utils","bidfactory","bidmanager","adloader","adaptermanager","defaultPlacementForBadBid","NginAdAdapter","rtbServerDomain","_callBids","params","nginadBids","bids","_requestBids","_getUniqueTagids","key","map","PubZoneIds","getBidIdParameter","hasOwnProperty","push","getWidthAndHeight","bid","adW","adH","sizeArrayLength","sizes","length","bidReqs","domain","window","location","host","page","pathname","search","hash","nginadImps","placementCode","_each","tagId","bidFloor","whArr","imp","id","bidId","banner","w","h","tagid","bidfloor","nginadDomain","nginadBidReq","getUniqueIdentifierStr","site","scriptUrl","protocol","encodeURIComponent","JSON","stringify","loadScript","handleErrorResponse","createBid","bidderCode","addBidResponse","pbjs","nginadResponse","nginadResponseObj","seatbid","nginadBid","responseCPM","impid","bidObj","_bidsRequested","find","bidSet","status","STATUS","GOOD","parseFloat","price","size","responseAd","adm","creative_id","Id","cpm","ad","decodeURIComponent","width","height","callBids","registerBidAdapter","module","exports"],"mappings":"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","file":"nginadBidAdapter.js","sourcesContent":["var CONSTANTS = require('src/constants.json');\nvar utils = require('src/utils.js');\nvar bidfactory = require('src/bidfactory.js');\nvar bidmanager = require('src/bidmanager.js');\nvar adloader = require('src/adloader');\nvar adaptermanager = require('src/adaptermanager');\n\nvar defaultPlacementForBadBid = null;\n\n/**\n * Adapter for requesting bids from NginAd\n */\nvar NginAdAdapter = function NginAdAdapter() {\n  var rtbServerDomain = 'placeholder.for.nginad.server.com';\n\n  function _callBids(params) {\n    var nginadBids = params.bids || [];\n\n    // De-dupe by tagid then issue single bid request for all bids\n    _requestBids(_getUniqueTagids(nginadBids));\n  }\n\n  // filter bids to de-dupe them?\n  function _getUniqueTagids(bids) {\n    var key;\n    var map = {};\n    var PubZoneIds = [];\n\n    for (key in bids) {\n      map[utils.getBidIdParameter('pzoneid', bids[key].params)] = bids[key];\n    }\n\n    for (key in map) {\n      if (map.hasOwnProperty(key)) {\n        PubZoneIds.push(map[key]);\n      }\n    }\n\n    return PubZoneIds;\n  }\n\n  function getWidthAndHeight(bid) {\n    var adW = null;\n    var adH = null;\n\n    var sizeArrayLength = bid.sizes.length;\n    if (sizeArrayLength === 2 && typeof bid.sizes[0] === 'number' && typeof bid.sizes[1] === 'number') {\n      adW = bid.sizes[0];\n      adH = bid.sizes[1];\n    } else {\n      adW = bid.sizes[0][0];\n      adH = bid.sizes[0][1];\n    }\n\n    return [adW, adH];\n  }\n\n  function _requestBids(bidReqs) {\n    // build bid request object\n    var domain = window.location.host;\n    var page = window.location.pathname + location.search + location.hash;\n\n    var nginadImps = [];\n\n    // assign the first adUnit (placement) for bad bids;\n    defaultPlacementForBadBid = bidReqs[0].placementCode;\n\n    // build impression array for nginad\n    utils._each(bidReqs, function(bid) {\n      var tagId = utils.getBidIdParameter('pzoneid', bid.params);\n      var bidFloor = utils.getBidIdParameter('bidfloor', bid.params);\n\n      var whArr = getWidthAndHeight(bid);\n\n      var imp = {\n        id: bid.bidId,\n        banner: {\n          w: whArr[0],\n          h: whArr[1]\n        },\n        tagid: tagId,\n        bidfloor: bidFloor\n      };\n\n      nginadImps.push(imp);\n      // bidmanager.pbCallbackMap[imp.id] = bid;\n\n      rtbServerDomain = bid.params.nginadDomain;\n    });\n\n    // build bid request with impressions\n    var nginadBidReq = {\n      id: utils.getUniqueIdentifierStr(),\n      imp: nginadImps,\n      site: {\n        domain: domain,\n        page: page\n      }\n    };\n\n    var scriptUrl = window.location.protocol + '//' + rtbServerDomain + '/bid/rtb?callback=window.pbjs.nginadResponse' +\n      '&br=' + encodeURIComponent(JSON.stringify(nginadBidReq));\n\n    adloader.loadScript(scriptUrl);\n  }\n\n  function handleErrorResponse(bidReqs, defaultPlacementForBadBid) {\n    // no response data\n    if (defaultPlacementForBadBid === null) {\n      // no id with which to create an dummy bid\n      return;\n    }\n\n    var bid = bidfactory.createBid(2);\n    bid.bidderCode = 'nginad';\n    bidmanager.addBidResponse(defaultPlacementForBadBid, bid);\n  }\n\n  // expose the callback to the global object:\n  pbjs.nginadResponse = function(nginadResponseObj) {\n    var bid = {};\n    var key;\n\n    // valid object?\n    if (!nginadResponseObj || !nginadResponseObj.id) {\n      return handleErrorResponse(nginadResponseObj, defaultPlacementForBadBid);\n    }\n\n    if (!nginadResponseObj.seatbid || nginadResponseObj.seatbid.length === 0 || !nginadResponseObj.seatbid[0].bid || nginadResponseObj.seatbid[0].bid.length === 0) {\n      return handleErrorResponse(nginadResponseObj, defaultPlacementForBadBid);\n    }\n\n    for (key in nginadResponseObj.seatbid[0].bid) {\n      var nginadBid = nginadResponseObj.seatbid[0].bid[key];\n\n      var responseCPM;\n      var placementCode = '';\n      var id = nginadBid.impid;\n\n      // try to fetch the bid request we sent NginAd\n      var bidObj = pbjs._bidsRequested.find(bidSet => bidSet.bidderCode === 'nginad').bids\n        .find(bid => bid.bidId === id);\n      if (!bidObj) {\n        return handleErrorResponse(nginadBid, defaultPlacementForBadBid);\n      }\n\n      placementCode = bidObj.placementCode;\n      bidObj.status = CONSTANTS.STATUS.GOOD;\n\n      // place ad response on bidmanager._adResponsesByBidderId\n      responseCPM = parseFloat(nginadBid.price);\n\n      if (responseCPM === 0) {\n        handleErrorResponse(nginadBid, id);\n      }\n\n      nginadBid.placementCode = placementCode;\n      nginadBid.size = bidObj.sizes;\n      var responseAd = nginadBid.adm;\n\n      // store bid response\n      // bid status is good (indicating 1)\n      bid = bidfactory.createBid(1);\n      bid.creative_id = nginadBid.Id;\n      bid.bidderCode = 'nginad';\n      bid.cpm = responseCPM;\n\n      // The bid is a mock bid, the true bidding process happens after the publisher tag is called\n      bid.ad = decodeURIComponent(responseAd);\n\n      var whArr = getWidthAndHeight(bidObj);\n      bid.width = whArr[0];\n      bid.height = whArr[1];\n\n      bidmanager.addBidResponse(placementCode, bid);\n    }\n  }; // nginadResponse\n\n  return {\n    callBids: _callBids\n  };\n};\n\nadaptermanager.registerBidAdapter(new NginAdAdapter(), 'nginad');\n\nmodule.exports = NginAdAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/nginadBidAdapter.js"],"sourceRoot":""}