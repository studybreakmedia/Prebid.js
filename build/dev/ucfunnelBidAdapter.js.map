{"version":3,"sources":["webpack:///./modules/ucfunnelBidAdapter.js"],"names":["utils","VER","UCFUNNEL_BIDDER_CODE","UcfunnelAdapter","_callBids","params","bids","forEach","bid","buildOptimizedCall","bidCallback","undefined","withCredentials","err","logError","placementCode","responseText","logMessage","handleRpCB","logWarn","badBid","createBid","NO_BID","bidderCode","bidder","error","addBidResponse","startTime","Date","getTime","host","getTopWindowLocation","page","pathname","refer","document","referrer","language","navigator","dnt","doNotTrack","msDoNotTrack","queryString","adid","reduce","memo","curr","index","encodeURIComponent","slice","bidRequest","ad","JSON","parse","GOOD","creative_id","ad_id","cpm","adm","width","height","dealId","deal","callBids","registerBidAdapter","module","exports"],"mappings":"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","file":"ucfunnelBidAdapter.js","sourcesContent":["import bidfactory from 'src/bidfactory';\nimport bidmanager from 'src/bidmanager';\nimport * as utils from 'src/utils';\nimport {ajax} from 'src/ajax';\nimport {STATUS} from 'src/constants';\nimport adaptermanager from 'src/adaptermanager';\n\nconst VER = 'ADGENT_PREBID-2017051801';\nconst UCFUNNEL_BIDDER_CODE = 'ucfunnel';\n\nfunction UcfunnelAdapter() {\n  function _callBids(params) {\n    let bids = params.bids || [];\n\n    bids.forEach((bid) => {\n      try {\n        ajax(buildOptimizedCall(bid), bidCallback, undefined, { withCredentials: true });\n      } catch (err) {\n        utils.logError('Error sending ucfunnel request for placement code ' + bid.placementCode, null, err);\n      }\n\n      function bidCallback(responseText) {\n        try {\n          utils.logMessage('XHR callback function called for placement code: ' + bid.placementCode);\n          handleRpCB(responseText, bid);\n        } catch (err) {\n          if (typeof err === 'string') {\n            utils.logWarn(`${err} when processing ucfunnel response for placement code ${bid.placementCode}`);\n          } else {\n            utils.logError('Error processing ucfunnel response for placement code ' + bid.placementCode, null, err);\n          }\n\n          // indicate that there is no bid for this placement\n          let badBid = bidfactory.createBid(STATUS.NO_BID, bid);\n          badBid.bidderCode = bid.bidder;\n          badBid.error = err;\n          bidmanager.addBidResponse(bid.placementCode, badBid);\n        }\n      }\n    });\n  }\n\n  function buildOptimizedCall(bid) {\n    bid.startTime = new Date().getTime();\n\n    const host = utils.getTopWindowLocation().host;\n    const page = utils.getTopWindowLocation().pathname;\n    const refer = document.referrer;\n    const language = navigator.language;\n    const dnt = (navigator.doNotTrack == 'yes' || navigator.doNotTrack == '1' || navigator.msDoNotTrack == '1') ? 1 : 0;\n\n    let queryString = [\n      'ifr', 0,\n      'bl', language,\n      'je', 1,\n      'dnt', dnt,\n      'host', host,\n      'u', page,\n      'ru', refer,\n      'adid', bid.params.adid,\n      'ver', VER\n    ];\n\n    return queryString.reduce(\n      (memo, curr, index) =>\n        index % 2 === 0 && queryString[index + 1] !== undefined\n          ? memo + curr + '=' + encodeURIComponent(queryString[index + 1]) + '&'\n          : memo,\n      '//agent.aralego.com/header?'\n    ).slice(0, -1);\n  }\n\n  function handleRpCB(responseText, bidRequest) {\n    let ad = JSON.parse(responseText); // can throw\n\n    let bid = bidfactory.createBid(STATUS.GOOD, bidRequest);\n    bid.creative_id = ad.ad_id;\n    bid.bidderCode = UCFUNNEL_BIDDER_CODE;\n    bid.cpm = ad.cpm || 0;\n    bid.ad = ad.adm;\n    bid.width = ad.width;\n    bid.height = ad.height;\n    bid.dealId = ad.deal;\n\n    bidmanager.addBidResponse(bidRequest.placementCode, bid);\n  }\n\n  return {\n    callBids: _callBids\n  };\n};\n\nadaptermanager.registerBidAdapter(new UcfunnelAdapter(), UCFUNNEL_BIDDER_CODE);\n\nmodule.exports = UcfunnelAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/ucfunnelBidAdapter.js"],"sourceRoot":""}