{"version":3,"sources":["webpack:///./modules/yieldmoBidAdapter.js"],"names":["utils","require","adloader","bidmanager","bidfactory","adaptermanager","YieldmoAdapter","_callBids","params","bids","loadScript","buildYieldmoCall","ymURI","ymCall","document","location","protocol","_appendPlacementInformation","_appendImpressionInformation","lastIndexOf","length","substring","logMessage","url","placements","placement","bid","i","callback_id","bidId","placement_id","placementCode","sizes","placementId","ym_placement_id","push","tryAppendQueryString","JSON","stringify","page_url","pr","referrer","dnt","navigator","doNotTrack","toString","_s","description","_getPageDescription","title","bust","Date","getTime","scrd","window","devicePixelRatio","querySelector","getAttribute","pbjs","YMCB","ymResponses","constructor","Array","_registerPlacementBid","_registerNoResponseBids","response","bidObj","getBidRequest","cpm","createBid","bidderCode","ad","width","height","addBidResponse","yieldmoBidRequests","_bidsRequested","find","_each","currentBid","callBids","registerBidAdapter","module","exports"],"mappings":"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","file":"yieldmoBidAdapter.js","sourcesContent":["var utils = require('src/utils.js');\nvar adloader = require('src/adloader.js');\nvar bidmanager = require('src/bidmanager.js');\nvar bidfactory = require('src/bidfactory.js');\nvar adaptermanager = require('src/adaptermanager');\n\n/**\n * Adapter for requesting bids from Yieldmo.\n *\n * @returns {{callBids: _callBids}}\n * @constructor\n */\n\nvar YieldmoAdapter = function YieldmoAdapter() {\n  function _callBids(params) {\n    var bids = params.bids;\n    adloader.loadScript(buildYieldmoCall(bids));\n  }\n\n  function buildYieldmoCall(bids) {\n    // build our base tag, based on if we are http or https\n    var ymURI = '//ads.yieldmo.com/exchange/prebid?';\n    var ymCall = document.location.protocol + ymURI;\n\n    // Placement specific information\n    ymCall = _appendPlacementInformation(ymCall, bids);\n\n    // General impression params\n    ymCall = _appendImpressionInformation(ymCall);\n\n    // remove the trailing \"&\"\n    if (ymCall.lastIndexOf('&') === ymCall.length - 1) {\n      ymCall = ymCall.substring(0, ymCall.length - 1);\n    }\n\n    utils.logMessage('ymCall request built: ' + ymCall);\n\n    return ymCall;\n  }\n\n  function _appendPlacementInformation(url, bids) {\n    var placements = [];\n    var placement;\n    var bid;\n\n    for (var i = 0; i < bids.length; i++) {\n      bid = bids[i];\n\n      placement = {};\n      placement.callback_id = bid.bidId;\n      placement.placement_id = bid.placementCode;\n      placement.sizes = bid.sizes;\n\n      if (bid.params && bid.params.placementId) {\n        placement.ym_placement_id = bid.params.placementId;\n      }\n\n      placements.push(placement);\n    }\n\n    url = utils.tryAppendQueryString(url, 'p', JSON.stringify(placements));\n    return url;\n  }\n\n  function _appendImpressionInformation(url) {\n    var page_url = document.location; // page url\n    var pr = document.referrer || ''; // page's referrer\n    var dnt = (navigator.doNotTrack || false).toString(); // true if user enabled dnt (false by default)\n    var _s = document.location.protocol === 'https:' ? 1 : 0; // 1 if page is secure\n    var description = _getPageDescription();\n    var title = document.title || ''; // Value of the title from the publisher's page.\n    var bust = new Date().getTime().toString(); // cache buster\n    var scrd = window.devicePixelRatio || 0; // screen pixel density\n\n    url = utils.tryAppendQueryString(url, 'callback', 'pbjs.YMCB');\n    url = utils.tryAppendQueryString(url, 'page_url', page_url);\n    url = utils.tryAppendQueryString(url, 'pr', pr);\n    url = utils.tryAppendQueryString(url, 'bust', bust);\n    url = utils.tryAppendQueryString(url, '_s', _s);\n    url = utils.tryAppendQueryString(url, 'scrd', scrd);\n    url = utils.tryAppendQueryString(url, 'dnt', dnt);\n    url = utils.tryAppendQueryString(url, 'description', description);\n    url = utils.tryAppendQueryString(url, 'title', title);\n\n    return url;\n  }\n\n  function _getPageDescription() {\n    if (document.querySelector('meta[name=\"description\"]')) {\n      return document.querySelector('meta[name=\"description\"]').getAttribute('content'); // Value of the description metadata from the publisher's page.\n    } else {\n      return '';\n    }\n  }\n\n  // expose the callback to the global object:\n  pbjs.YMCB = function(ymResponses) {\n    if (ymResponses && ymResponses.constructor === Array && ymResponses.length > 0) {\n      for (var i = 0; i < ymResponses.length; i++) {\n        _registerPlacementBid(ymResponses[i]);\n      }\n    } else {\n      // If an incorrect response is returned, register error bids for all placements\n      // to prevent Prebid waiting till timeout for response\n      _registerNoResponseBids();\n\n      utils.logMessage('No prebid response for placement %%PLACEMENT%%');\n    }\n  };\n\n  function _registerPlacementBid(response) {\n    var bidObj = utils.getBidRequest(response.callback_id);\n    var placementCode = bidObj && bidObj.placementCode;\n    var bid = [];\n\n    if (response && response.cpm && response.cpm !== 0) {\n      bid = bidfactory.createBid(1, bidObj);\n      bid.bidderCode = 'yieldmo';\n      bid.cpm = response.cpm;\n      bid.ad = response.ad;\n      bid.width = response.width;\n      bid.height = response.height;\n      bidmanager.addBidResponse(placementCode, bid);\n    } else {\n      // no response data\n      if (bidObj) { utils.logMessage('No prebid response from yieldmo for placementCode: ' + bidObj.placementCode); }\n      bid = bidfactory.createBid(2, bidObj);\n      bid.bidderCode = 'yieldmo';\n      bidmanager.addBidResponse(placementCode, bid);\n    }\n  }\n\n  function _registerNoResponseBids() {\n    var yieldmoBidRequests = pbjs._bidsRequested.find(bid => bid.bidderCode === 'yieldmo');\n\n    utils._each(yieldmoBidRequests.bids, function (currentBid) {\n      var bid = [];\n      bid = bidfactory.createBid(2, currentBid);\n      bid.bidderCode = 'yieldmo';\n      bidmanager.addBidResponse(currentBid.placementCode, bid);\n    });\n  }\n\n  return Object.assign(this, {\n    callBids: _callBids\n  });\n};\n\nadaptermanager.registerBidAdapter(new YieldmoAdapter(), 'yieldmo');\n\nmodule.exports = YieldmoAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/yieldmoBidAdapter.js"],"sourceRoot":""}