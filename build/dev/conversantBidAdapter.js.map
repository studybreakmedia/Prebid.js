{"version":3,"sources":["webpack:///./modules/conversantBidAdapter.js"],"names":["utils","BIDDER_CODE","URL","SYNC_URL","VERSION","spec","code","aliases","supportedMediaTypes","isBidRequestValid","bid","params","logWarn","isStr","site_id","isVideoRequest","mimes","isArray","every","s","buildRequests","validBidRequests","loc","getTopWindowLocation","page","href","isPageSecure","protocol","siteId","requestId","conversantImps","map","bidfloor","getBidIdParameter","secure","format","convertSizes","sizes","imp","id","bidId","displaymanager","displaymanagerver","copyOptProperty","video","w","h","banner","payload","site","mobile","document","querySelector","device","getDevice","at","method","url","data","interpretResponse","serverResponse","bidRequest","bidResponses","requestMap","body","_each","seatbid","bidList","conversantBid","responseCPM","parseFloat","price","impid","responseAd","adm","responseNurl","nurl","request","currency","cur","cpm","creativeId","crid","ttl","netRevenue","vastUrl","mediaType","width","height","ad","push","getUserSyncs","syncOptions","pixelEnabled","type","getDNT","navigator","doNotTrack","window","msDoNoTrack","language","screen","dnt","split","make","vendor","ua","userAgent","bidSizes","length","_map","d","deepAccess","src","srcName","dst","dstName","obj"],"mappings":"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","file":"conversantBidAdapter.js","sourcesContent":["import * as utils from 'src/utils';\nimport {registerBidder} from 'src/adapters/bidderFactory';\nimport { VIDEO } from 'src/mediaTypes';\n\nconst BIDDER_CODE = 'conversant';\nconst URL = '//media.msg.dotomi.com/s2s/header/24';\nconst SYNC_URL = '//media.msg.dotomi.com/w/user.sync';\nconst VERSION = '2.2.1';\n\nexport const spec = {\n  code: BIDDER_CODE,\n  aliases: ['cnvr'], // short code\n  supportedMediaTypes: [VIDEO],\n\n  /**\n   * Determines whether or not the given bid request is valid.\n   *\n   * @param {BidRequest} bid - The bid params to validate.\n   * @return {boolean} True if this is a valid bid, and false otherwise.\n   */\n  isBidRequestValid: function(bid) {\n    if (!bid || !bid.params) {\n      utils.logWarn(BIDDER_CODE + ': Missing bid parameters');\n      return false;\n    }\n\n    if (!utils.isStr(bid.params.site_id)) {\n      utils.logWarn(BIDDER_CODE + ': site_id must be specified as a string')\n      return false;\n    }\n\n    if (isVideoRequest(bid)) {\n      if (!bid.params.mimes) {\n        // Give a warning but let it pass\n        utils.logWarn(BIDDER_CODE + ': mimes should be specified for videos');\n      } else if (!utils.isArray(bid.params.mimes) || !bid.params.mimes.every(s => utils.isStr(s))) {\n        utils.logWarn(BIDDER_CODE + ': mimes must be an array of strings');\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Make a server request from the list of BidRequests.\n   *\n   * @param {BidRequest[]} validBidRequests - an array of bids\n   * @return {ServerRequest} Info describing the request to the server.\n   */\n  buildRequests: function(validBidRequests) {\n    const loc = utils.getTopWindowLocation();\n    const page = loc.href;\n    const isPageSecure = (loc.protocol === 'https:') ? 1 : 0;\n    let siteId = '';\n    let requestId = '';\n\n    const conversantImps = validBidRequests.map(function(bid) {\n      const bidfloor = utils.getBidIdParameter('bidfloor', bid.params);\n      const secure = isPageSecure || (utils.getBidIdParameter('secure', bid.params) ? 1 : 0);\n\n      siteId = utils.getBidIdParameter('site_id', bid.params);\n      requestId = bid.requestId;\n\n      const format = convertSizes(bid.sizes);\n\n      const imp = {\n        id: bid.bidId,\n        secure: secure,\n        bidfloor: bidfloor || 0,\n        displaymanager: 'Prebid.js',\n        displaymanagerver: VERSION\n      };\n\n      copyOptProperty(bid.params, 'tag_id', imp, 'tagid');\n\n      if (isVideoRequest(bid)) {\n        const video = {\n          w: format[0].w,\n          h: format[0].h\n        };\n\n        copyOptProperty(bid.params, 'position', video, 'pos');\n        copyOptProperty(bid.params, 'mimes', video);\n        copyOptProperty(bid.params, 'maxduration', video);\n        copyOptProperty(bid.params, 'protocols', video);\n        copyOptProperty(bid.params, 'api', video);\n\n        imp.video = video;\n      } else {\n        const banner = {format: format};\n\n        copyOptProperty(bid.params, 'position', banner, 'pos');\n\n        imp.banner = banner;\n      }\n\n      return imp;\n    });\n\n    const payload = {\n      id: requestId,\n      imp: conversantImps,\n      site: {\n        id: siteId,\n        mobile: document.querySelector('meta[name=\"viewport\"][content*=\"width=device-width\"]') !== null ? 1 : 0,\n        page: page\n      },\n      device: getDevice(),\n      at: 1\n    };\n\n    return {\n      method: 'POST',\n      url: URL,\n      data: payload,\n    };\n  },\n  /**\n   * Unpack the response from the server into a list of bids.\n   *\n   * @param {*} serverResponse A successful response from the server.\n   * @return {Bid[]} An array of bids which were nested inside the server.\n   */\n  interpretResponse: function(serverResponse, bidRequest) {\n    const bidResponses = [];\n    const requestMap = {};\n    serverResponse = serverResponse.body;\n\n    if (bidRequest && bidRequest.data && bidRequest.data.imp) {\n      utils._each(bidRequest.data.imp, imp => requestMap[imp.id] = imp);\n    }\n\n    if (serverResponse && utils.isArray(serverResponse.seatbid)) {\n      utils._each(serverResponse.seatbid, function(bidList) {\n        utils._each(bidList.bid, function(conversantBid) {\n          const responseCPM = parseFloat(conversantBid.price);\n          if (responseCPM > 0.0 && conversantBid.impid) {\n            const responseAd = conversantBid.adm || '';\n            const responseNurl = conversantBid.nurl || '';\n            const request = requestMap[conversantBid.impid];\n\n            const bid = {\n              requestId: conversantBid.impid,\n              currency: serverResponse.cur || 'USD',\n              cpm: responseCPM,\n              creativeId: conversantBid.crid || '',\n              ttl: 300,\n              netRevenue: true\n            };\n\n            if (request.video) {\n              bid.vastUrl = responseAd;\n              bid.mediaType = 'video';\n              bid.width = request.video.w;\n              bid.height = request.video.h;\n            } else {\n              bid.ad = responseAd + '<img src=\"' + responseNurl + '\" />';\n              bid.width = conversantBid.w;\n              bid.height = conversantBid.h;\n            }\n\n            bidResponses.push(bid);\n          }\n        })\n      });\n    }\n\n    return bidResponses;\n  },\n\n  /**\n   * Return use sync info\n   *\n   * @param {SyncOptions} syncOptions - Info about usersyncs that the adapter should obey\n   * @return {UserSync} Adapter sync type and url\n   */\n  getUserSyncs: function(syncOptions) {\n    if (syncOptions.pixelEnabled) {\n      return [{\n        type: 'image',\n        url: SYNC_URL\n      }];\n    }\n  }\n};\n\n/**\n * Determine do-not-track state\n *\n * @returns {boolean}\n */\nfunction getDNT() {\n  return navigator.doNotTrack === '1' || window.doNotTrack === '1' || navigator.msDoNoTrack === '1' || navigator.doNotTrack === 'yes';\n}\n\n/**\n * Return openrtb device object that includes ua, width, and height.\n *\n * @returns {Device} Openrtb device object\n */\nfunction getDevice() {\n  const language = navigator.language ? 'language' : 'userLanguage';\n  return {\n    h: screen.height,\n    w: screen.width,\n    dnt: getDNT() ? 1 : 0,\n    language: navigator[language].split('-')[0],\n    make: navigator.vendor ? navigator.vendor : '',\n    ua: navigator.userAgent\n  };\n}\n\n/**\n * Convert arrays of widths and heights to an array of objects with w and h properties.\n *\n * [[300, 250], [300, 600]] => [{w: 300, h: 250}, {w: 300, h: 600}]\n *\n * @param {number[2][]|number[2]} bidSizes - arrays of widths and heights\n * @returns {object[]} Array of objects with w and h\n */\nfunction convertSizes(bidSizes) {\n  let format;\n\n  if (bidSizes.length === 2 && typeof bidSizes[0] === 'number' && typeof bidSizes[1] === 'number') {\n    format = [{w: bidSizes[0], h: bidSizes[1]}];\n  } else {\n    format = utils._map(bidSizes, d => { return {w: d[0], h: d[1]}; });\n  }\n\n  return format;\n}\n\n/**\n * Check if it's a video bid request\n *\n * @param {BidRequest} bid - Bid request generated from ad slots\n * @returns {boolean} True if it's a video bid\n */\nfunction isVideoRequest(bid) {\n  return bid.mediaType === 'video' || !!utils.deepAccess(bid, 'mediaTypes.video');\n}\n\n/**\n * Copy property if exists from src to dst\n *\n * @param {object} src\n * @param {string} srcName\n * @param {object} dst\n * @param {string} [dstName] - Optional. If not specified then srcName is used.\n */\nfunction copyOptProperty(src, srcName, dst, dstName) {\n  dstName = dstName || srcName;\n  const obj = utils.getBidIdParameter(srcName, src);\n  if (obj !== '') {\n    dst[dstName] = obj;\n  }\n}\n\nregisterBidder(spec);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/conversantBidAdapter.js"],"sourceRoot":""}