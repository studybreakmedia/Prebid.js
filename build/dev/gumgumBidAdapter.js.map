{"version":3,"sources":["webpack:///./modules/gumgumBidAdapter.js"],"names":["bidfactory","require","bidmanager","utils","adloader","adaptermanager","BIDDER_CODE","CALLBACKS","GumgumAdapter","bidEndpoint","topWindow","topScreen","pageViewId","requestCache","throttleTable","defaultThrottle","dtCredentials","member","global","top","screen","error","logError","_getTimeStamp","Date","getTime","_getDigiTrustQueryParams","getDigiTrustId","digiTrustUser","window","DigiTrust","getUser","success","identity","digiTrustId","privacy","optout","id","_callBids","bids","browserParams","vw","innerWidth","vh","innerHeight","sw","width","sh","height","pu","location","href","ce","navigator","cookieEnabled","dpr","devicePixelRatio","_each","bidId","bidRequest","params","placementCode","timestamp","trackingId","inScreen","nativeId","slotId","inSlot","bid","tmax","pbjs","cbTimeout","inImage","pi","logWarn","productId","requestKey","throttle","latestRequest","JSON","stringify","t","ni","si","pv","cachedBid","callback","jsonp","_handleGumGumResponse","query","bidCall","parseQueryStringParameters","loadScript","bidResponse","cachedBidRequest","ad","pag","thms","pvid","createBid","request","encodedResponse","encodeURIComponent","gumgumAdLoader","cpm","price","bidderCode","addBidResponse","noBid","handleGumGumCB","callBids","registerBidAdapter","module","exports"],"mappings":"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","file":"gumgumBidAdapter.js","sourcesContent":["const bidfactory = require('src/bidfactory');\nconst bidmanager = require('src/bidmanager');\nconst utils = require('src/utils');\nconst adloader = require('src/adloader');\nvar adaptermanager = require('src/adaptermanager');\n\nconst BIDDER_CODE = 'gumgum';\nconst CALLBACKS = {};\n\nconst GumgumAdapter = function GumgumAdapter() {\n  const bidEndpoint = `https://g2.gumgum.com/hbid/imp`;\n\n  let topWindow;\n  let topScreen;\n  let pageViewId;\n  const requestCache = {};\n  const throttleTable = {};\n  const defaultThrottle = 3e4;\n  const dtCredentials = { member: 'YcXr87z2lpbB' };\n\n  try {\n    topWindow = global.top;\n    topScreen = topWindow.screen;\n  } catch (error) {\n    return utils.logError(error);\n  }\n\n  function _getTimeStamp() {\n    return new Date().getTime();\n  }\n\n  function _getDigiTrustQueryParams() {\n    function getDigiTrustId () {\n      var digiTrustUser = (window.DigiTrust && window.DigiTrust.getUser) ? window.DigiTrust.getUser(dtCredentials) : {};\n      return (digiTrustUser && digiTrustUser.success && digiTrustUser.identity) || '';\n    };\n\n    let digiTrustId = getDigiTrustId();\n    // Verify there is an ID and this user has not opted out\n    if (!digiTrustId || (digiTrustId.privacy && digiTrustId.privacy.optout)) {\n      return {};\n    }\n    return {\n      'dt': digiTrustId.id\n    };\n  }\n\n  function _callBids({ bids }) {\n    const browserParams = {\n      vw: topWindow.innerWidth,\n      vh: topWindow.innerHeight,\n      sw: topScreen.width,\n      sh: topScreen.height,\n      pu: topWindow.location.href,\n      ce: navigator.cookieEnabled,\n      dpr: topWindow.devicePixelRatio || 1\n    };\n\n    utils._each(bids, bidRequest => {\n      const { bidId\n        , params = {}\n        , placementCode\n      } = bidRequest;\n      const timestamp = _getTimeStamp();\n      const trackingId = params.inScreen;\n      const nativeId = params['native'];\n      const slotId = params.inSlot;\n      const bid = { tmax: pbjs.cbTimeout };\n\n      /* slot/native ads need the placement id */\n      switch (true) {\n        case !!(params.inImage): bid.pi = 1; break;\n        case !!(params.inScreen): bid.pi = 2; break;\n        case !!(params.inSlot): bid.pi = 3; break;\n        case !!(params['native']): bid.pi = 5; break;\n        default: return utils.logWarn(\n          `[GumGum] No product selected for the placement ${placementCode}` +\n          ', please check your implementation.'\n        );\n      }\n\n      /* throttle based on the latest request for this product */\n      const productId = bid.pi;\n      const requestKey = productId + '|' + placementCode;\n      const throttle = throttleTable[productId];\n      const latestRequest = requestCache[requestKey];\n      if (latestRequest && throttle && (timestamp - latestRequest) < throttle) {\n        return utils.logWarn(\n          `[GumGum] The refreshes for \"${placementCode}\" with the params ` +\n          `${JSON.stringify(params)} should be at least ${throttle / 1e3}s apart.`\n        );\n      }\n      /* update the last request */\n      requestCache[requestKey] = timestamp;\n\n      /* tracking id is required for in-image and in-screen */\n      if (trackingId) bid.t = trackingId;\n      /* native ads require a native placement id */\n      if (nativeId) bid.ni = nativeId;\n      /* slot ads require a slot id */\n      if (slotId) bid.si = slotId;\n\n      /* include the pageViewId, if any */\n      if (pageViewId) bid.pv = pageViewId;\n\n      const cachedBid = Object.assign({\n        placementCode,\n        id: bidId\n      }, bid);\n\n      const callback = { jsonp: `pbjs.handleGumGumCB['${bidId}']` };\n      CALLBACKS[bidId] = _handleGumGumResponse(cachedBid);\n      const query = Object.assign(callback, browserParams, bid, _getDigiTrustQueryParams());\n      const bidCall = `${bidEndpoint}?${utils.parseQueryStringParameters(query)}`;\n      adloader.loadScript(bidCall);\n    });\n  }\n\n  const _handleGumGumResponse = cachedBidRequest => (bidResponse = {}) => {\n    const { pi: productId\n    } = cachedBidRequest;\n    const { ad = {}\n      , pag = {}\n      , thms: throttle\n    } = bidResponse;\n    /* cache the pageViewId */\n    if (pag && pag.pvid) pageViewId = pag.pvid;\n    if (ad && ad.id) {\n      /* set the new throttle */\n      throttleTable[productId] = throttle || defaultThrottle;\n      /* create the bid */\n      const bid = bidfactory.createBid(1);\n      const { t: trackingId\n      } = pag;\n      bidResponse.request = cachedBidRequest;\n      const encodedResponse = encodeURIComponent(JSON.stringify(bidResponse));\n      const gumgumAdLoader = `<script>\n        (function (context, topWindow, d, s, G) {\n          G = topWindow.GUMGUM;\n          d = topWindow.document;\n          function loadAd() {\n            topWindow.GUMGUM.pbjs(\"${trackingId}\", ${productId}, \"${encodedResponse}\" , context);\n          }\n          if (G) {\n            loadAd();\n          } else {\n            topWindow.pbjs.loadScript(\"https://js.gumgum.com/services.js\", loadAd);\n          }\n        }(window, top));\n      </script>`;\n      Object.assign(bid, {\n        cpm: ad.price,\n        ad: gumgumAdLoader,\n        width: ad.width,\n        height: ad.height,\n        bidderCode: BIDDER_CODE\n      });\n      bidmanager.addBidResponse(cachedBidRequest.placementCode, bid);\n    } else {\n      const noBid = bidfactory.createBid(2);\n      noBid.bidderCode = BIDDER_CODE;\n      bidmanager.addBidResponse(cachedBidRequest.placementCode, noBid);\n    }\n    delete CALLBACKS[cachedBidRequest.id];\n  };\n\n  window.pbjs.handleGumGumCB = CALLBACKS;\n\n  return {\n    callBids: _callBids\n  };\n};\n\nadaptermanager.registerBidAdapter(new GumgumAdapter(), 'gumgum');\n\nmodule.exports = GumgumAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/gumgumBidAdapter.js"],"sourceRoot":""}