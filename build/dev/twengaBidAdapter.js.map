{"version":3,"sources":["webpack:///./modules/twengaBidAdapter.js"],"names":["CONSTANTS","require","utils","adloader","bidmanager","bidfactory","Adapter","adaptermanager","TwengaAdapter","baseAdapter","callBids","params","i","bids","length","bidRequest","callbackId","bidId","loadScript","buildBidCall","bid","bidUrl","tryAppendQueryString","getTopWindowUrl","key","value","sizes","parseSizesInput","join","logMessage","startTime","Date","getTime","pbjs","handleTwCB","bidResponseObj","bidCode","callback_uid","responseCPM","id","placementCode","bidObj","getBidRequest","bidder","status","STATUS","GOOD","result","cpm","ad","parseInt","replace","createBid","creative_id","bidderCode","lastIndexOf","adUrl","width","height","addBidResponse","setBidderCode","registerBidAdapter","module","exports"],"mappings":"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","file":"twengaBidAdapter.js","sourcesContent":["var CONSTANTS = require('src/constants.json');\nvar utils = require('src/utils.js');\nvar adloader = require('src/adloader.js');\nvar bidmanager = require('src/bidmanager.js');\nvar bidfactory = require('src/bidfactory.js');\nvar Adapter = require('src/adapter.js').default;\nvar adaptermanager = require('src/adaptermanager');\n\nfunction TwengaAdapter() {\n  var baseAdapter = new Adapter('twenga');\n\n  baseAdapter.callBids = function (params) {\n    for (var i = 0; i < params.bids.length; i++) {\n      var bidRequest = params.bids[i];\n      var callbackId = bidRequest.bidId;\n      adloader.loadScript(buildBidCall(bidRequest, callbackId));\n    }\n  };\n\n  function buildBidCall(bid, callbackId) {\n    var bidUrl = '//rtb.t.c4tw.net/Bid?';\n    bidUrl = utils.tryAppendQueryString(bidUrl, 's', 'h');\n    bidUrl = utils.tryAppendQueryString(bidUrl, 'callback', 'pbjs.handleTwCB');\n    bidUrl = utils.tryAppendQueryString(bidUrl, 'callback_uid', callbackId);\n    bidUrl = utils.tryAppendQueryString(bidUrl, 'referrer', utils.getTopWindowUrl());\n    if (bid.params) {\n      for (var key in bid.params) {\n        var value = bid.params[key];\n        switch (key) {\n          case 'placementId': key = 'id'; break;\n          case 'siteId': key = 'sid'; break;\n          case 'publisherId': key = 'pid'; break;\n          case 'currency': key = 'cur'; break;\n          case 'bidFloor': key = 'min'; break;\n          case 'country': key = 'gz'; break;\n        }\n        bidUrl = utils.tryAppendQueryString(bidUrl, key, value);\n      }\n    }\n\n    var sizes = utils.parseSizesInput(bid.sizes);\n    if (sizes.length > 0) {\n      bidUrl = utils.tryAppendQueryString(bidUrl, 'size', sizes.join(','));\n    }\n\n    bidUrl += 'ta=1';\n\n    // @if NODE_ENV='debug'\n    utils.logMessage('bid request built: ' + bidUrl);\n\n    // @endif\n\n    // append a timer here to track latency\n    bid.startTime = new Date().getTime();\n\n    return bidUrl;\n  }\n\n  // expose the callback to the global object:\n  pbjs.handleTwCB = function (bidResponseObj) {\n    var bidCode;\n\n    if (bidResponseObj && bidResponseObj.callback_uid) {\n      var responseCPM;\n      var id = bidResponseObj.callback_uid;\n      var placementCode = '';\n      var bidObj = utils.getBidRequest(id);\n      if (bidObj) {\n        bidCode = bidObj.bidder;\n\n        placementCode = bidObj.placementCode;\n\n        bidObj.status = CONSTANTS.STATUS.GOOD;\n      }\n\n      // @if NODE_ENV='debug'\n      utils.logMessage('JSONP callback function called for ad ID: ' + id);\n\n      // @endif\n      var bid = [];\n      if (bidResponseObj.result &&\n          bidResponseObj.result.cpm &&\n          bidResponseObj.result.cpm !== 0 &&\n          bidResponseObj.result.ad) {\n        var result = bidResponseObj.result;\n\n        responseCPM = parseInt(result.cpm, 10);\n\n        // CPM response from /Bid is dollar/cent multiplied by 10000\n        // in order to avoid using floats\n        // switch CPM to \"dollar/cent\"\n        responseCPM = responseCPM / 10000;\n\n        var ad = result.ad.replace('%%WP%%', result.cpm);\n\n        // store bid response\n        // bid status is good (indicating 1)\n        bid = bidfactory.createBid(1, bidObj);\n        bid.creative_id = result.creative_id;\n        bid.bidderCode = bidCode;\n        bid.cpm = responseCPM;\n        if (ad && (ad.lastIndexOf('http', 0) === 0 || ad.lastIndexOf('//', 0) === 0)) { bid.adUrl = ad; } else { bid.ad = ad; }\n        bid.width = result.width;\n        bid.height = result.height;\n\n        bidmanager.addBidResponse(placementCode, bid);\n      } else {\n        // no response data\n        // @if NODE_ENV='debug'\n        utils.logMessage('No prebid response from Twenga for placement code ' + placementCode);\n\n        // @endif\n        // indicate that there is no bid for this placement\n        bid = bidfactory.createBid(2, bidObj);\n        bid.bidderCode = bidCode;\n        bidmanager.addBidResponse(placementCode, bid);\n      }\n    } else {\n      // no response data\n      // @if NODE_ENV='debug'\n      utils.logMessage('No prebid response for placement %%PLACEMENT%%');\n\n      // @endif\n    }\n  };\n\n  return Object.assign(this, {\n    callBids: baseAdapter.callBids,\n    setBidderCode: baseAdapter.setBidderCode,\n    buildBidCall: buildBidCall\n  });\n}\n\nadaptermanager.registerBidAdapter(new TwengaAdapter(), 'twenga');\n\nmodule.exports = TwengaAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/twengaBidAdapter.js"],"sourceRoot":""}