{"version":3,"sources":["webpack:///./modules/atomxBidAdapter.js"],"names":["CONSTANTS","require","bidfactory","bidmanager","adloader","Ajax","utils","adaptermanager","AtomxAdapter","_callBids","data","window","atomx_prebid","loadScript","location","protocol","_bid","url","bids","i","ln","length","bid","params","id","sizes","parseSizesInput","j","ajax","_responseCallback","bind","size","prebid","placementCode","method","noDecodeWholeURL","bidObject","createBid","STATUS","NO_BID","bidderCode","addBidResponse","JSON","parse","cpm","GOOD","adm","ad","adUrl","width","height","_error","logError","callBids","responseCallback","registerBidAdapter","module","exports"],"mappings":"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","file":"atomxBidAdapter.js","sourcesContent":["var CONSTANTS = require('src/constants.json');\nvar bidfactory = require('src/bidfactory.js');\nvar bidmanager = require('src/bidmanager.js');\nvar adloader = require('src/adloader.js');\nvar Ajax = require('src/ajax');\nvar utils = require('src/utils.js');\nvar adaptermanager = require('src/adaptermanager');\n\n/**\n * Adapter for requesting bids from Atomx.\n *\n * @returns {{callBids: _callBids, responseCallback: _responseCallback}}\n */\nvar AtomxAdapter = function AtomxAdapter() {\n  function _callBids(data) {\n    if (!window.atomx_prebid) {\n      adloader.loadScript(window.location.protocol + '//s.ato.mx/b.js', function() { _bid(data); }, true);\n    } else {\n      _bid(data);\n    }\n  }\n\n  function _bid(data) {\n    var url = window.atomx_prebid();\n    var bids = data.bids || [];\n    for (var i = 0, ln = bids.length; i < ln; i++) {\n      var bid = bids[i];\n      if (bid.params && bid.params.id) {\n        var sizes = utils.parseSizesInput(bid.sizes);\n        for (var j = 0; j < sizes.length; j++) {\n          Ajax.ajax(url, _responseCallback.bind(this, bid), {\n            id: bid.params.id,\n            size: sizes[j],\n            prebid: bid.placementCode\n          }, {method: 'GET', noDecodeWholeURL: true});\n        }\n      } else {\n        var bidObject = bidfactory.createBid(CONSTANTS.STATUS.NO_BID, bid);\n        bidObject.bidderCode = 'atomx';\n        bidmanager.addBidResponse(bid.placementCode, bidObject);\n      }\n    }\n  }\n\n  function _responseCallback(bid, data) {\n    var bidObject;\n    try {\n      data = JSON.parse(data);\n\n      if (data.cpm && data.cpm > 0) {\n        bidObject = bidfactory.createBid(CONSTANTS.STATUS.GOOD, bid);\n        bidObject.bidderCode = 'atomx';\n        bidObject.cpm = data.cpm * 1000;\n        if (data.adm) {\n          bidObject.ad = data.adm;\n        } else {\n          bidObject.adUrl = data.url;\n        }\n        bidObject.width = data.width;\n        bidObject.height = data.height;\n        bidmanager.addBidResponse(bid.placementCode, bidObject);\n        return;\n      }\n    } catch (_error) {\n      utils.logError(_error);\n    }\n\n    bidObject = bidfactory.createBid(CONSTANTS.STATUS.NO_BID, bid);\n    bidObject.bidderCode = 'atomx';\n    bidmanager.addBidResponse(bid.placementCode, bidObject);\n  }\n\n  return {\n    callBids: _callBids,\n    responseCallback: _responseCallback\n  };\n};\n\nadaptermanager.registerBidAdapter(new AtomxAdapter(), 'atomx');\n\nmodule.exports = AtomxAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/atomxBidAdapter.js"],"sourceRoot":""}