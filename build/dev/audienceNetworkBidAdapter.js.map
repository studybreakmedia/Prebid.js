{"version":3,"sources":["webpack:///./modules/audienceNetworkBidAdapter.js"],"names":["code","currency","method","url","supportedMediaTypes","netRevenue","hb_bidder","isBidRequestValid","bid","params","placementId","length","Array","isArray","sizes","isVideo","format","map","flattenSize","some","isValidSize","size","expandSize","split","Number","includes","sdkVersion","isTestmode","Boolean","window","location","search","indexOf","toString","createAdHtml","bidId","nativeStyle","nativeContainer","getTopWindowUrlEncoded","encodeURIComponent","buildRequests","placementids","adformats","sdk","requestIds","bids","forEach","filter","slice","push","testmode","pageurl","video","findIndex","playerwidth","playerheight","data","interpretResponse","body","ttl","getConfig","bidderTimeout","errors","Object","keys","reduce","a","b","concat","i","fb_bidid","bid_id","creativeId","placement_id","cpm","bid_price_cents","width","height","ad","requestId","bidResponse","fb_format","fb_placementid","mediaType","vastUrl","spec"],"mappings":"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","file":"audienceNetworkBidAdapter.js","sourcesContent":["/**\n * @file AudienceNetwork adapter.\n */\nimport { registerBidder } from 'src/adapters/bidderFactory';\nimport { config } from 'src/config';\nimport { formatQS } from 'src/url';\nimport { getTopWindowUrl } from 'src/utils';\n\nconst code = 'audienceNetwork';\nconst currency = 'USD';\nconst method = 'GET';\nconst url = 'https://an.facebook.com/v2/placementbid.json';\nconst supportedMediaTypes = ['video'];\nconst netRevenue = true;\nconst hb_bidder = 'fan';\n\n/**\n * Does this bid request contain valid parameters?\n * @param {Object} bid\n * @returns {Boolean}\n */\nconst isBidRequestValid = bid =>\n  typeof bid.params === 'object' &&\n  typeof bid.params.placementId === 'string' &&\n  bid.params.placementId.length > 0 &&\n  Array.isArray(bid.sizes) && bid.sizes.length > 0 &&\n  (isVideo(bid.params.format) || bid.sizes.map(flattenSize).some(isValidSize));\n\n/**\n * Flattens a 2-element [W, H] array as a 'WxH' string,\n * otherwise passes value through.\n * @param {Array|String} size\n * @returns {String}\n */\nconst flattenSize = size =>\n  (Array.isArray(size) && size.length === 2) ? `${size[0]}x${size[1]}` : size;\n\n/**\n * Expands a 'WxH' string as a 2-element [W, H] array\n * @param {String} size\n * @returns {Array}\n */\nconst expandSize = size => size.split('x').map(Number);\n\n/**\n * Is this a valid slot size?\n * @param {String} size\n * @returns {Boolean}\n */\nconst isValidSize = size => ['300x250', '320x50'].includes(size);\n\n/**\n * Is this a video format?\n * @param {String} format\n * @returns {Boolean}\n */\nconst isVideo = format => format === 'video';\n\n/**\n * Which SDK version should be used for this format?\n * @param {String} format\n * @returns {String}\n */\nconst sdkVersion = format => isVideo(format) ? '' : '5.5.web';\n\n/**\n * Does the search part of the URL contain \"anhb_testmode\"\n * and therefore indicate testmode should be used?\n * @returns {String} \"true\" or \"false\"\n */\nconst isTestmode = () => Boolean(\n  window && window.location &&\n  typeof window.location.search === 'string' &&\n  window.location.search.indexOf('anhb_testmode') !== -1\n).toString();\n\n/**\n * Generate ad HTML for injection into an iframe\n * @param {String} placementId\n * @param {String} format\n * @param {String} bidId\n * @returns {String} HTML\n */\nconst createAdHtml = (placementId, format, bidId) => {\n  const nativeStyle = format === 'native' ? '<script>window.onload=function(){if(parent){var o=document.getElementsByTagName(\"head\")[0];var s=parent.document.getElementsByTagName(\"style\");for(var i=0;i<s.length;i++)o.appendChild(s[i].cloneNode(true));}}</script>' : '';\n  const nativeContainer = format === 'native' ? '<div class=\"thirdPartyRoot\"><a class=\"fbAdLink\"><div class=\"fbAdMedia thirdPartyMediaClass\"></div><div class=\"fbAdSubtitle thirdPartySubtitleClass\"></div><div class=\"fbDefaultNativeAdWrapper\"><div class=\"fbAdCallToAction thirdPartyCallToActionClass\"></div><div class=\"fbAdTitle thirdPartyTitleClass\"></div></div></a></div>' : '';\n  return `<html><head>${nativeStyle}</head><body><div style=\"display:none;position:relative;\">\n<script type='text/javascript'>var data = {placementid:'${placementId}',format:'${format}',bidid:'${bidId}',onAdLoaded:function(e){console.log('Audience Network [${placementId}] ad loaded');e.style.display = 'block';},onAdError:function(c,m){console.log('Audience Network [${placementId}] error (' + c + ') ' + m);}};\n(function(a,b,c){var d='https://www.facebook.com',e='https://connect.facebook.net/en_US/fbadnw55.js',f={iframeLoaded:true,xhrLoaded:true},g=a.data,h=function(){if(Date.now){return Date.now();}else return +new Date();},i=function(aa){var ba=d+'/audience_network/client_event',ca={cb:h(),event_name:'ADNW_ADERROR',ad_pivot_type:'audience_network_mobile_web',sdk_version:'5.5.web',app_id:g.placementid.split('_')[0],publisher_id:g.placementid.split('_')[1],error_message:aa},da=[];for(var ea in ca)da.push(encodeURIComponent(ea)+'='+encodeURIComponent(ca[ea]));var fa=ba+'?'+da.join('&'),ga=new XMLHttpRequest();ga.open('GET',fa,true);ga.send();if(g.onAdError)g.onAdError('1000','Internal error.');},j=function(){if(b.currentScript){return b.currentScript;}else{var aa=b.getElementsByTagName('script');return aa[aa.length-1];}},k=function(aa){try{return aa.document.referrer;}catch(ba){}return '';},l=function(){var aa=a,ba=[aa];try{while(aa!==aa.parent&&aa.parent.document)ba.push(aa=aa.parent);}catch(ca){}return ba.reverse();},m=function(){var aa=l();for(var ba=0;ba<aa.length;ba++){var ca=aa[ba],da=ca.ADNW||{};ca.ADNW=da;if(!ca.ADNW)continue;return da.v55=da.v55||{ads:[],window:ca};}throw new Error('no_writable_global');},n=function(aa){var ba=aa.indexOf('/',aa.indexOf('://')+3);if(ba===-1)return aa;return aa.substring(0,ba);},o=function(aa){return aa.location.href||k(aa);},p=function(aa){if(aa.sdkLoaded)return;var ba=aa.window.document,ca=ba.createElement('iframe');ca.name='fbadnw';ca.style.display='none';ba.body.appendChild(ca);var da=ca.contentDocument.createElement('script');da.src=e;da.async=true;ca.contentDocument.body.appendChild(da);aa.sdkLoaded=true;},q=function(aa){var ba=/^https?:\\\\/\\\\/www\\\\.google(\\\\.com?)?\\\\.\\\\w{2,3}$/;return !!aa.match(ba);},r=function(aa){return !!aa.match(/cdn\\\\.ampproject\\\\.org$/);},s=function(){var aa=c.ancestorOrigins||[],ba=aa[aa.length-1]||c.origin,ca=aa[aa.length-2]||c.origin;if(q(ba)&&r(ca)){return n(ca);}else return n(ba);},t=function(aa){try{return JSON.parse(aa);}catch(ba){i(ba.message);throw ba;}},u=function(aa,ba,ca){if(!aa.iframe){var da=ca.createElement('iframe');da.src=d+'/audiencenetwork/iframe/';da.style.display='none';ca.body.appendChild(da);aa.iframe=da;aa.iframeAppendedTime=h();aa.iframeData={};}ba.iframe=aa.iframe;ba.iframeData=aa.iframeData;ba.tagJsIframeAppendedTime=aa.iframeAppendedTime||0;},v=function(aa){var ba=d+'/audiencenetwork/xhr/?sdk=5.5.web';for(var ca in aa)if(typeof aa[ca]!=='function')ba+='&'+ca+'='+encodeURIComponent(aa[ca]);var da=new XMLHttpRequest();da.open('GET',ba,true);da.withCredentials=true;da.onreadystatechange=function(){if(da.readyState===4){var ea=t(da.response);aa.events.push({name:'xhrLoaded',source:aa.iframe.contentWindow,data:ea,postMessageTimestamp:h(),receivedTimestamp:h()});}};da.send();},w=function(aa,ba){var ca=d+'/audiencenetwork/xhriframe/?sdk=5.5.web';for(var da in ba)if(typeof ba[da]!=='function')ca+='&'+da+'='+encodeURIComponent(ba[da]);var ea=b.createElement('iframe');ea.src=ca;ea.style.display='none';b.body.appendChild(ea);ba.iframe=ea;ba.iframeData={};ba.tagJsIframeAppendedTime=h();},x=function(aa){var ba=function(event){try{var da=event.data;if(da.name in f)aa.events.push({name:da.name,source:event.source,data:da.data});}catch(ea){}},ca=aa.iframe.contentWindow.parent;ca.addEventListener('message',ba,false);},y=function(aa){if(aa.context&&aa.context.sourceUrl)return true;try{return !!JSON.parse(decodeURI(aa.name)).ampcontextVersion;}catch(ba){return false;}},z=function(aa){var ba=h(),ca=l()[0],da=j().parentElement,ea=ca!=a.top,fa=ca.$sf&&ca.$sf.ext,ga=o(ca),ha=m();p(ha);var ia={amp:y(ca),events:[],tagJsInitTime:ba,rootElement:da,iframe:null,tagJsIframeAppendedTime:ha.iframeAppendedTime||0,url:ga,domain:s(),channel:n(o(ca)),width:screen.width,height:screen.height,pixelratio:a.devicePixelRatio,placementindex:ha.ads.length,crossdomain:ea,safeframe:!!fa,placementid:g.placementid,format:g.format||'300x250',testmode:!!g.testmode,onAdLoaded:g.onAdLoaded,onAdError:g.onAdError};if(g.bidid)ia.bidid=g.bidid;if(ea){w(ha,ia);}else{u(ha,ia,ca.document);v(ia);}; x(ia);ia.rootElement.dataset.placementid=ia.placementid;ha.ads.push(ia);};try{z();}catch(aa){i(aa.message||aa);throw aa;}})(window,document,location);\n</script>\n${nativeContainer}</div></body></html>`;\n};\n\n/**\n * Get the current window location URL correctly encoded for use in a URL query string.\n * @returns {String} URI-encoded URL\n */\nconst getTopWindowUrlEncoded = () => encodeURIComponent(getTopWindowUrl());\n\n/**\n * Convert each bid request to a single URL to fetch those bids.\n * @param {Array} bids - list of bids\n * @param {String} bids[].placementCode - Prebid placement identifier\n * @param {Object} bids[].params\n * @param {String} bids[].params.placementId - Audience Network placement identifier\n * @param {String} bids[].params.format - Optional format, one of 'video', 'native' or 'fullwidth' if set\n * @param {Array} bids[].sizes - list of desired advert sizes\n * @param {Array} bids[].sizes[] - Size arrays [h,w]: should include one of [300, 250], [320, 50]: first matched size is used\n * @returns {Array<Object>} List of URLs to fetch, plus formats and sizes for later use with interpretResponse\n */\nconst buildRequests = bids => {\n  // Build lists of placementids, adformats, sizes and SDK versions\n  const placementids = [];\n  const adformats = [];\n  const sizes = [];\n  const sdk = [];\n  const requestIds = [];\n\n  bids.forEach(bid => bid.sizes\n    .map(flattenSize)\n    .filter(size => isValidSize(size) || isVideo(bid.params.format))\n    .slice(0, 1)\n    .forEach(size => {\n      placementids.push(bid.params.placementId);\n      adformats.push(bid.params.format || size);\n      sizes.push(size);\n      sdk.push(sdkVersion(bid.params.format));\n      requestIds.push(bid.bidId);\n    })\n  );\n\n  // Build URL\n  const testmode = isTestmode();\n  const pageurl = getTopWindowUrlEncoded();\n  const search = {\n    placementids,\n    adformats,\n    testmode,\n    pageurl,\n    sdk\n  };\n  const video = adformats.findIndex(isVideo);\n  if (video !== -1) {\n    [search.playerwidth, search.playerheight] = sizes[video].split('x').map(Number)\n  }\n  const data = formatQS(search);\n\n  return [{ adformats, data, method, requestIds, sizes, url }];\n};\n\n/**\n * Convert a server response to a bid response.\n * @param {Object} response - object representing the response\n * @param {Object} response.body - response body, already converted from JSON\n * @param {Object} bidRequests - the original bid requests\n * @param {Array} bidRequest.adformats - list of formats for the original bid requests\n * @param {Array} bidRequest.sizes - list of sizes fot the original bid requests\n * @returns {Array<Object>} A list of bid response objects\n */\nconst interpretResponse = ({ body }, { adformats, requestIds, sizes }) => {\n  const ttl = Number(config.getConfig().bidderTimeout);\n\n  return body.errors && body.errors.length\n    ? []\n    : Object.keys(body.bids)\n      // extract Array of bid responses\n      .map(placementId => body.bids[placementId])\n      // flatten\n      .reduce((a, b) => a.concat(b), [])\n      // transform to bidResponse\n      .map((bid, i) => {\n        const {\n          bid_id: fb_bidid,\n          placement_id: creativeId,\n          bid_price_cents: cpm\n        } = bid;\n\n        const format = adformats[i];\n        const [width, height] = expandSize(flattenSize(sizes[i]));\n        const ad = createAdHtml(creativeId, format, fb_bidid);\n        const requestId = requestIds[i];\n\n        const bidResponse = {\n          // Prebid attributes\n          requestId,\n          cpm: cpm / 100,\n          width,\n          height,\n          ad,\n          ttl,\n          creativeId,\n          netRevenue,\n          currency,\n          // Audience Network attributes\n          hb_bidder,\n          fb_bidid,\n          fb_format: format,\n          fb_placementid: creativeId\n        };\n        // Video attributes\n        if (isVideo(format)) {\n          const pageurl = getTopWindowUrlEncoded();\n          bidResponse.mediaType = 'video';\n          bidResponse.vastUrl = `https://an.facebook.com/v1/instream/vast.xml?placementid=${creativeId}&pageurl=${pageurl}&playerwidth=${width}&playerheight=${height}&bidid=${fb_bidid}`;\n        }\n        return bidResponse;\n      });\n};\n\nexport const spec = {\n  code,\n  supportedMediaTypes,\n  isBidRequestValid,\n  buildRequests,\n  interpretResponse\n};\n\nregisterBidder(spec);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/audienceNetworkBidAdapter.js"],"sourceRoot":""}