{"version":3,"sources":["webpack:///./modules/sekindoUMBidAdapter.js"],"names":["utils","spec","code","supportedMediaTypes","isBidRequestValid","bid","mediaType","mediaTypes","video","params","playerWidth","playerHeight","spaceId","buildRequests","validBidRequests","bidderRequest","pubUrl","parent","window","document","referrer","location","href","map","subId","getBidIdParameter","bidRequest","bidfloor","protocol","queryString","tryAppendQueryString","transactionId","bidId","vid_vastType","context","endpointUrl","method","url","data","interpretResponse","serverResponse","bidResponses","bidResponse","requestId","body","id","bidderCode","cpm","width","height","creativeId","currency","netRevenue","ttl","vastUrl","vastXml","ad","push","getUserSyncs","syncOptions","iframeEnabled","type"],"mappings":"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","file":"sekindoUMBidAdapter.js","sourcesContent":["import * as utils from 'src/utils';\r\nimport {registerBidder} from 'src/adapters/bidderFactory';\r\nexport const spec = {\r\n  code: 'sekindoUM',\r\n  supportedMediaTypes: ['video'],\r\n  /**\r\n   * Determines whether or not the given bid request is valid.\r\n   *\r\n   * @param {BidRequest} bid The bid params to validate.\r\n   * @return boolean True if this is a valid bid, and false otherwise.\r\n   */\r\n  isBidRequestValid: function(bid) {\r\n    if (bid.mediaType == 'video' || (typeof bid.mediaTypes == 'object' && typeof bid.mediaTypes.video == 'object')) {\r\n      if (typeof bid.params.video != 'object' || typeof bid.params.video.playerWidth == 'undefined' || typeof bid.params.video.playerHeight == 'undefined') {\r\n        return false;\r\n      }\r\n    }\r\n    return !!(bid.params.spaceId);\r\n  },\r\n  /**\r\n   * Make a server request from the list of BidRequests.\r\n   *\r\n   * @param {validBidRequests[]} - an array of bids\r\n   * @return ServerRequest Info describing the request to the server.\r\n   */\r\n  buildRequests: function(validBidRequests, bidderRequest) {\r\n    var pubUrl = null;\r\n    if (parent !== window) {\r\n      pubUrl = document.referrer;\r\n    } else {\r\n      pubUrl = window.location.href;\r\n    }\r\n\r\n    return validBidRequests.map(bidRequest => {\r\n      var subId = utils.getBidIdParameter('subId', bidRequest.params);\r\n      var spaceId = utils.getBidIdParameter('spaceId', bidRequest.params);\r\n      var bidfloor = utils.getBidIdParameter('bidfloor', bidRequest.params);\r\n      var protocol = (document.location.protocol === 'https:' ? 's' : '');\r\n      var queryString = '';\r\n\r\n      queryString = utils.tryAppendQueryString(queryString, 's', spaceId);\r\n      queryString = utils.tryAppendQueryString(queryString, 'subId', subId);\r\n      queryString = utils.tryAppendQueryString(queryString, 'pubUrl', pubUrl);\r\n      queryString = utils.tryAppendQueryString(queryString, 'hbTId', bidRequest.transactionId);\r\n      queryString = utils.tryAppendQueryString(queryString, 'hbBidId', bidRequest.bidId);\r\n      queryString = utils.tryAppendQueryString(queryString, 'hbver', '4');\r\n      queryString = utils.tryAppendQueryString(queryString, 'hbcb', '1');/// legasy\r\n      queryString = utils.tryAppendQueryString(queryString, 'dcpmflr', bidfloor);\r\n      queryString = utils.tryAppendQueryString(queryString, 'protocol', protocol);\r\n      if (bidRequest.mediaType === 'video' || (typeof bidRequest.mediaTypes == 'object' && typeof bidRequest.mediaTypes.video == 'object')) {\r\n        queryString = utils.tryAppendQueryString(queryString, 'x', bidRequest.params.playerWidth);\r\n        queryString = utils.tryAppendQueryString(queryString, 'y', bidRequest.params.playerHeight);\r\n        if (typeof vid_vastType != 'undefined') {\r\n          queryString = utils.tryAppendQueryString(queryString, 'vid_vastType', bidRequest.params.vid_vastType);\r\n        }\r\n        if (typeof bidRequest.mediaTypes == 'object' && typeof bidRequest.mediaTypes.video == 'object' && typeof bidRequest.mediaTypes.video.context == 'string') {\r\n          queryString = utils.tryAppendQueryString(queryString, 'vid_context', bidRequest.mediaTypes.video.context);\r\n        }\r\n      }\r\n\r\n      var endpointUrl = 'http' + protocol + '://hb.sekindo.com/live/liveView.php';\r\n\r\n      return {\r\n        method: 'GET',\r\n        url: endpointUrl,\r\n        data: queryString,\r\n      };\r\n    });\r\n  },\r\n  /**\r\n   * Unpack the response from the server into a list of bids.\r\n   *\r\n   * @param {*} serverResponse A successful response from the server.\r\n   * @return {Bid[]} An array of bids which were nested inside the server.\r\n   */\r\n  interpretResponse: function(serverResponse, bidRequest) {\r\n    if (typeof serverResponse !== 'object') {\r\n      return [];\r\n    }\r\n\r\n    let bidResponses = [];\r\n    var bidResponse = {\r\n      requestId: serverResponse.body.id,\r\n      bidderCode: spec.code,\r\n      cpm: serverResponse.body.cpm,\r\n      width: serverResponse.body.width,\r\n      height: serverResponse.body.height,\r\n      creativeId: serverResponse.body.creativeId,\r\n      currency: serverResponse.body.currency,\r\n      netRevenue: serverResponse.body.netRevenue,\r\n      ttl: serverResponse.body.ttl\r\n    };\r\n    if (bidRequest.mediaType == 'video') {\r\n      if (typeof serverResponse.body.vastUrl != 'undefined') {\r\n        bidResponse.vastUrl = serverResponse.body.vastUrl;\r\n      } else {\r\n        bidResponse.vastXml = serverResponse.body.vastXml;\r\n      }\r\n    } else {\r\n      bidResponse.ad = serverResponse.body.ad;\r\n    }\r\n\r\n    bidResponses.push(bidResponse);\r\n    return bidResponses;\r\n  },\r\n  getUserSyncs: function(syncOptions) {\r\n    if (syncOptions.iframeEnabled) {\r\n      return [{\r\n        type: 'iframe',\r\n        url: 'ADAPTER_SYNC_URL'\r\n      }];\r\n    }\r\n  }\r\n}\r\nregisterBidder(spec);\r\n\n\n\n// WEBPACK FOOTER //\n// ./modules/sekindoUMBidAdapter.js"],"sourceRoot":""}