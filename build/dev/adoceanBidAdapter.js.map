{"version":3,"sources":["webpack:///./modules/adoceanBidAdapter.js"],"names":["utils","BIDDER_CODE","buildEndpointUrl","emiter","payload","payloadString","_each","v","k","length","encodeURIComponent","buildRequest","masterBidRequests","masterId","firstBid","id","bidIdMap","params","slaveId","bidId","method","url","data","assignToMaster","bidRequest","bidRequestsByMaster","push","interpretResponse","placementResponse","bids","error","adCode","winUrl","statsUrl","decodeURIComponent","code","bid","ad","cpm","parseFloat","price","currency","height","parseInt","requestId","width","netRevenue","ttl","creativeId","crid","spec","isBidRequestValid","buildRequests","validBidRequests","requests","_map","serverResponse","isArray","body"],"mappings":"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","file":"adoceanBidAdapter.js","sourcesContent":["import * as utils from 'src/utils';\nimport { registerBidder } from 'src/adapters/bidderFactory';\n\nconst BIDDER_CODE = 'adocean';\n\nfunction buildEndpointUrl(emiter, payload) {\n  let payloadString = '';\n  utils._each(payload, function(v, k) {\n    if (payloadString.length) {\n      payloadString += '&';\n    }\n    payloadString += k + '=' + encodeURIComponent(v);\n  });\n\n  return 'https://' + emiter + '/ad.json?' + payloadString;\n}\n\nfunction buildRequest(masterBidRequests, masterId) {\n  const firstBid = masterBidRequests[0];\n  const payload = {\n    id: masterId,\n  };\n\n  const bidIdMap = {};\n\n  utils._each(masterBidRequests, function(v) {\n    bidIdMap[v.params.slaveId] = v.bidId;\n  });\n\n  return {\n    method: 'GET',\n    url: buildEndpointUrl(firstBid.params.emiter, payload),\n    data: {},\n    bidIdMap: bidIdMap\n  };\n}\n\nfunction assignToMaster(bidRequest, bidRequestsByMaster) {\n  const masterId = bidRequest.params.masterId;\n  bidRequestsByMaster[masterId] = bidRequestsByMaster[masterId] || [];\n  bidRequestsByMaster[masterId].push(bidRequest);\n}\n\nfunction interpretResponse(placementResponse, bidRequest, bids) {\n  if (!placementResponse.error) {\n    let adCode = '<script type=\"application/javascript\">(function(){var wu=\"' + (placementResponse.winUrl || '') + '\",su=\"' + (placementResponse.statsUrl || '') + '\".replace(/\\\\[TIMESTAMP\\\\]/,(new Date()).getTime());';\n    adCode += 'if(navigator.sendBeacon){if(wu){navigator.sendBeacon(wu)||((new Image(1,1)).src=wu)};if(su){navigator.sendBeacon(su)||((new Image(1,1)).src=su)}}';\n    adCode += 'else{if(wu){(new Image(1,1)).src=wu;}if(su){(new Image(1,1)).src=su;}}';\n    adCode += '})();<\\/script>';\n    adCode += decodeURIComponent(placementResponse.code);\n\n    const bid = {\n      ad: adCode,\n      cpm: parseFloat(placementResponse.price),\n      currency: placementResponse.currency,\n      height: parseInt(placementResponse.height, 10),\n      requestId: bidRequest.bidIdMap[placementResponse.id],\n      width: parseInt(placementResponse.width, 10),\n      netRevenue: false,\n      ttl: parseInt(placementResponse.ttl),\n      creativeId: placementResponse.crid\n    };\n\n    bids.push(bid);\n  }\n}\n\nexport const spec = {\n  code: BIDDER_CODE,\n\n  isBidRequestValid: function(bid) {\n    return !!(bid.params.slaveId && bid.params.masterId && bid.params.emiter);\n  },\n\n  buildRequests: function(validBidRequests) {\n    const bidRequestsByMaster = {};\n    let requests = [];\n\n    utils._each(validBidRequests, function(v) {\n      assignToMaster(v, bidRequestsByMaster);\n    });\n    requests = utils._map(bidRequestsByMaster, function(v, k) {\n      return buildRequest(v, k);\n    });\n\n    return requests;\n  },\n\n  interpretResponse: function(serverResponse, bidRequest) {\n    let bids = [];\n\n    if (utils.isArray(serverResponse.body)) {\n      utils._each(serverResponse.body, function(placementResponse) {\n        interpretResponse(placementResponse, bidRequest, bids);\n      });\n    }\n\n    return bids;\n  }\n};\nregisterBidder(spec);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/adoceanBidAdapter.js"],"sourceRoot":""}