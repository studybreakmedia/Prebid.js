{"version":3,"sources":["webpack:///./modules/memeglobalBidAdapter.js"],"names":["CONSTANTS","require","utils","bidfactory","bidmanager","adloader","adaptermanager","bidderName","MemeGlobalAdapter","bidder","_callBids","params","bids","i","length","_requestBid","bidReq","domain","window","location","host","page","pathname","search","hash","tagId","getBidIdParameter","bidFloor","Number","adW","adH","bidSizes","Array","isArray","sizes","sizeArrayLength","bidRequest","id","getUniqueIdentifierStr","imp","bidId","banner","w","h","tagid","placementCode","bidfloor","site","publisher","scriptUrl","REPO_AND_VERSION","encodeURIComponent","JSON","stringify","loadScript","getBidSetForBidder","pbjs","_bidsRequested","find","bidSet","bidderCode","mgres","bidResp","seatbid","bid","forEach","bidderBid","responseCPM","bidRequested","b","impid","bidResponse","createBid","status","STATUS","GOOD","parseFloat","price","addBidResponse","size","responseAd","adm","responseNurl","nurl","creative_id","cpm","ad","decodeURIComponent","width","parseInt","height","callBids","registerBidAdapter","module","exports"],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAIA,YAAY,mBAAAC,CAAQ,CAAR,CAAhB;AACA,IAAIC,QAAQ,mBAAAD,CAAQ,CAAR,CAAZ;AACA,IAAIE,aAAa,mBAAAF,CAAQ,CAAR,CAAjB;AACA,IAAIG,aAAa,mBAAAH,CAAQ,CAAR,CAAjB;AACA,IAAII,WAAW,mBAAAJ,CAAQ,CAAR,CAAf;AACA,IAAIK,iBAAiB,mBAAAL,CAAQ,CAAR,CAArB;;AAEA,IAAIM,aAAa,YAAjB;AACA;;;;AAIA,IAAIC,oBAAoB,SAASA,iBAAT,GAA6B;AACnD,MAAIC,SAAS,+CAAb;;AAEA,WAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,QAAIC,OAAOD,OAAOC,IAAlB;;AAEA,QAAI,CAACA,IAAL,EAAW;;AAEX,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,KAAKE,MAAzB,EAAiCD,GAAjC,EAAsC;AACpCE,kBAAYH,KAAKC,CAAL,CAAZ;AACD;AACF;;AAED,WAASE,WAAT,CAAqBC,MAArB,EAA6B;AAC3B;AACA,QAAIC,SAASC,OAAOC,QAAP,CAAgBC,IAA7B;AACA,QAAIC,OAAOH,OAAOC,QAAP,CAAgBC,IAAhB,GAAuBF,OAAOC,QAAP,CAAgBG,QAAvC,GAAkDH,SAASI,MAA3D,GAAoEJ,SAASK,IAAxF;;AAEA,QAAIC,QAAQvB,MAAMwB,iBAAN,CAAwB,OAAxB,EAAiCV,OAAOL,MAAxC,CAAZ;AACA,QAAIgB,WAAWC,OAAO1B,MAAMwB,iBAAN,CAAwB,UAAxB,EAAoCV,OAAOL,MAA3C,CAAP,CAAf;AACA,QAAIkB,MAAM,CAAV;AACA,QAAIC,MAAM,CAAV;;AAEA,QAAIC,WAAWC,MAAMC,OAAN,CAAcjB,OAAOL,MAAP,CAAcuB,KAA5B,IAAqClB,OAAOL,MAAP,CAAcuB,KAAnD,GAA2DlB,OAAOkB,KAAjF;AACA,QAAIC,kBAAkBJ,SAASjB,MAA/B;AACA,QAAIqB,oBAAoB,CAApB,IAAyB,OAAOJ,SAAS,CAAT,CAAP,KAAuB,QAAhD,IAA4D,OAAOA,SAAS,CAAT,CAAP,KAAuB,QAAvF,EAAiG;AAC/FF,YAAME,SAAS,CAAT,CAAN;AACAD,YAAMC,SAAS,CAAT,CAAN;AACD,KAHD,MAGO;AACLF,YAAME,SAAS,CAAT,EAAY,CAAZ,CAAN;AACAD,YAAMC,SAAS,CAAT,EAAY,CAAZ,CAAN;AACD;;AAED;AACA,QAAIK,aAAa;AACfC,UAAInC,MAAMoC,sBAAN,EADW;AAEfC,WAAK,CAAC;AACJF,YAAIrB,OAAOwB,KADP;AAEJC,gBAAQ;AACNC,aAAGb,GADG;AAENc,aAAGb;AAFG,SAFJ;AAMJc,eAAO5B,OAAO6B,aANV;AAOJC,kBAAUnB;AAPN,OAAD,CAFU;AAWfoB,YAAM;AACJ9B,gBAAQA,MADJ;AAEJI,cAAMA,IAFF;AAGJ2B,mBAAW;AACTX,cAAIZ;AADK;AAHP;AAXS,KAAjB;;AAoBA,QAAIwB,YAAY,OAAOxC,MAAP,GAAgB,6BAAhB,GACd,OADc,GACJT,UAAUkD,gBADN,GAEd,MAFc,GAELC,mBAAmBC,KAAKC,SAAL,CAAejB,UAAf,CAAnB,CAFX;AAGA/B,aAASiD,UAAT,CAAoBL,SAApB;AACD;;AAED,WAASM,kBAAT,GAA8B;AAC5B,WAAOC,KAAKC,cAAL,CAAoBC,IAApB,CAAyB;AAAA,aAAUC,OAAOC,UAAP,KAAsBrD,UAAhC;AAAA,KAAzB,CAAP;AACD;;AAED;AACAiD,OAAKK,KAAL,GAAa,UAAUC,OAAV,EAAmB;AAC9B;AACA,QAAK,CAACA,OAAD,IAAY,CAACA,QAAQzB,EAAtB,IACD,CAACyB,QAAQC,OAAT,IAAoBD,QAAQC,OAAR,CAAgBjD,MAAhB,KAA2B,CAA/C,IAAoD,CAACgD,QAAQC,OAAR,CAAgB,CAAhB,EAAmBC,GAAxE,IAA+EF,QAAQC,OAAR,CAAgB,CAAhB,EAAmBC,GAAnB,CAAuBlD,MAAvB,KAAkC,CADpH,EACwH;AACtH;AACD;;AAEDgD,YAAQC,OAAR,CAAgB,CAAhB,EAAmBC,GAAnB,CAAuBC,OAAvB,CAA+B,UAAUC,SAAV,EAAqB;AAClD,UAAIC,WAAJ;AACA,UAAItB,gBAAgB,EAApB;;AAEA,UAAIc,SAASJ,oBAAb;AACA,UAAIa,eAAeT,OAAO/C,IAAP,CAAY8C,IAAZ,CAAiB;AAAA,eAAKW,EAAE7B,KAAF,KAAY0B,UAAUI,KAA3B;AAAA,OAAjB,CAAnB;AACA,UAAIF,YAAJ,EAAkB;AAChB,YAAIG,cAAcpE,WAAWqE,SAAX,CAAqB,CAArB,CAAlB;AACA3B,wBAAgBuB,aAAavB,aAA7B;AACAuB,qBAAaK,MAAb,GAAsBzE,UAAU0E,MAAV,CAAiBC,IAAvC;AACAR,sBAAcS,WAAWV,UAAUW,KAArB,CAAd;AACA,YAAIV,gBAAgB,CAApB,EAAuB;AACrB,cAAIH,MAAM7D,WAAWqE,SAAX,CAAqB,CAArB,CAAV;AACAR,cAAIJ,UAAJ,GAAiBrD,UAAjB;AACAH,qBAAW0E,cAAX,CAA0BjC,aAA1B,EAAyCmB,GAAzC;AACA;AACD;AACDO,oBAAY1B,aAAZ,GAA4BA,aAA5B;AACA0B,oBAAYQ,IAAZ,GAAmBX,aAAalC,KAAhC;AACA,YAAI8C,aAAad,UAAUe,GAA3B;AACA,YAAIC,eAAe,eAAehB,UAAUiB,IAAzB,GAAgC,oDAAnD;AACAZ,oBAAYa,WAAZ,GAA0BlB,UAAU7B,EAApC;AACAkC,oBAAYX,UAAZ,GAAyBrD,UAAzB;AACAgE,oBAAYc,GAAZ,GAAkBlB,WAAlB;AACAI,oBAAYe,EAAZ,GAAiBC,mBAAmBP,aAAaE,YAAhC,CAAjB;AACAX,oBAAYiB,KAAZ,GAAoBC,SAASvB,UAAUxB,CAAnB,CAApB;AACA6B,oBAAYmB,MAAZ,GAAqBD,SAASvB,UAAUvB,CAAnB,CAArB;AACAvC,mBAAW0E,cAAX,CAA0BjC,aAA1B,EAAyC0B,WAAzC;AACD;AACF,KA7BD;AA8BD,GArCD;;AAuCA,SAAO;AACLoB,cAAUjF;AADL,GAAP;AAGD,CA3GD;;AA6GAJ,eAAesF,kBAAf,CAAkC,IAAIpF,iBAAJ,EAAlC,EAA2D,YAA3D;;AAEAqF,OAAOC,OAAP,GAAiBtF,iBAAjB,C","file":"memeglobalBidAdapter.js","sourcesContent":["var CONSTANTS = require('src/constants.json');\nvar utils = require('src/utils.js');\nvar bidfactory = require('src/bidfactory.js');\nvar bidmanager = require('src/bidmanager.js');\nvar adloader = require('src/adloader');\nvar adaptermanager = require('src/adaptermanager');\n\nvar bidderName = 'memeglobal';\n/**\n * Adapter for requesting bids from Meme Global Media Group\n * OpenRTB compatible\n */\nvar MemeGlobalAdapter = function MemeGlobalAdapter() {\n  var bidder = 'stinger.memeglobal.com/api/v1/services/prebid';\n\n  function _callBids(params) {\n    var bids = params.bids;\n\n    if (!bids) return;\n\n    for (var i = 0; i < bids.length; i++) {\n      _requestBid(bids[i]);\n    }\n  }\n\n  function _requestBid(bidReq) {\n    // build bid request object\n    var domain = window.location.host;\n    var page = window.location.host + window.location.pathname + location.search + location.hash;\n\n    var tagId = utils.getBidIdParameter('tagid', bidReq.params);\n    var bidFloor = Number(utils.getBidIdParameter('bidfloor', bidReq.params));\n    var adW = 0;\n    var adH = 0;\n\n    var bidSizes = Array.isArray(bidReq.params.sizes) ? bidReq.params.sizes : bidReq.sizes;\n    var sizeArrayLength = bidSizes.length;\n    if (sizeArrayLength === 2 && typeof bidSizes[0] === 'number' && typeof bidSizes[1] === 'number') {\n      adW = bidSizes[0];\n      adH = bidSizes[1];\n    } else {\n      adW = bidSizes[0][0];\n      adH = bidSizes[0][1];\n    }\n\n    // build bid request with impressions\n    var bidRequest = {\n      id: utils.getUniqueIdentifierStr(),\n      imp: [{\n        id: bidReq.bidId,\n        banner: {\n          w: adW,\n          h: adH\n        },\n        tagid: bidReq.placementCode,\n        bidfloor: bidFloor\n      }],\n      site: {\n        domain: domain,\n        page: page,\n        publisher: {\n          id: tagId\n        }\n      }\n    };\n\n    var scriptUrl = '//' + bidder + '?callback=window.pbjs.mgres' +\n      '&src=' + CONSTANTS.REPO_AND_VERSION +\n      '&br=' + encodeURIComponent(JSON.stringify(bidRequest));\n    adloader.loadScript(scriptUrl);\n  }\n\n  function getBidSetForBidder() {\n    return pbjs._bidsRequested.find(bidSet => bidSet.bidderCode === bidderName);\n  }\n\n  // expose the callback to the global object:\n  pbjs.mgres = function (bidResp) {\n    // valid object?\n    if ((!bidResp || !bidResp.id) ||\n      (!bidResp.seatbid || bidResp.seatbid.length === 0 || !bidResp.seatbid[0].bid || bidResp.seatbid[0].bid.length === 0)) {\n      return;\n    }\n\n    bidResp.seatbid[0].bid.forEach(function (bidderBid) {\n      var responseCPM;\n      var placementCode = '';\n\n      var bidSet = getBidSetForBidder();\n      var bidRequested = bidSet.bids.find(b => b.bidId === bidderBid.impid);\n      if (bidRequested) {\n        var bidResponse = bidfactory.createBid(1);\n        placementCode = bidRequested.placementCode;\n        bidRequested.status = CONSTANTS.STATUS.GOOD;\n        responseCPM = parseFloat(bidderBid.price);\n        if (responseCPM === 0) {\n          var bid = bidfactory.createBid(2);\n          bid.bidderCode = bidderName;\n          bidmanager.addBidResponse(placementCode, bid);\n          return;\n        }\n        bidResponse.placementCode = placementCode;\n        bidResponse.size = bidRequested.sizes;\n        var responseAd = bidderBid.adm;\n        var responseNurl = '<img src=\"' + bidderBid.nurl + '\" height=\"0px\" width=\"0px\" style=\"display: none;\">';\n        bidResponse.creative_id = bidderBid.id;\n        bidResponse.bidderCode = bidderName;\n        bidResponse.cpm = responseCPM;\n        bidResponse.ad = decodeURIComponent(responseAd + responseNurl);\n        bidResponse.width = parseInt(bidderBid.w);\n        bidResponse.height = parseInt(bidderBid.h);\n        bidmanager.addBidResponse(placementCode, bidResponse);\n      }\n    });\n  };\n\n  return {\n    callBids: _callBids\n  };\n};\n\nadaptermanager.registerBidAdapter(new MemeGlobalAdapter(), 'memeglobal');\n\nmodule.exports = MemeGlobalAdapter;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/memeglobalBidAdapter.js"],"sourceRoot":""}