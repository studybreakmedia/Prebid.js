{"version":3,"sources":["webpack:///./modules/jcmBidAdapter.js"],"names":["utils","BIDDER_CODE","URL","spec","code","aliases","isBidRequestValid","bid","params","siteId","bidId","buildRequests","validBidRequests","BidRequestStr","bids","i","length","adSizes","x","sizes","parseGPTSingleSizeArray","push","JSONStr","JSON","stringify","dataStr","encodeURIComponent","method","url","data","interpretResponse","serverResponse","bidResponses","body","bidResponse","requestId","callbackId","bidderCode","cpm","width","height","creativeId","currency","netRevenue","ttl","ad","decodeURIComponent","replace","getUserSyncs","syncOptions","iframeEnabled","type","image"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;IAAYA,K;;AACZ;;;;AACA,IAAMC,cAAc,KAApB;AACA,IAAMC,MAAM,4BAAZ;;AAEO,IAAMC,sBAAO;AAClBC,QAAMH,WADY;AAElBI,WAAS,CAAC,SAAD,CAFS;AAGlBC,qBAAmB,2BAASC,GAAT,EAAc;AAC/B,WAAO,CAAC,EAAEA,IAAIC,MAAJ,IAAcD,IAAIC,MAAJ,CAAWC,MAAzB,IAAmCF,IAAIG,KAAzC,CAAR;AACD,GALiB;;AAOlBC,iBAAe,uBAASC,gBAAT,EAA2B;AACxC,QAAIC,gBAAgB;AAClBC,YAAM;AADY,KAApB;;AAIA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIH,iBAAiBI,MAArC,EAA6CD,GAA7C,EAAkD;AAChD,UAAIE,UAAU,EAAd;AACA,UAAIV,MAAMK,iBAAiBG,CAAjB,CAAV;AACA,WAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIX,IAAIY,KAAJ,CAAUH,MAA9B,EAAsCE,GAAtC,EAA2C;AACzCD,mBAAWjB,MAAMoB,uBAAN,CAA8Bb,IAAIY,KAAJ,CAAUD,CAAV,CAA9B,CAAX;AACA,YAAIA,MAAOX,IAAIY,KAAJ,CAAUH,MAAV,GAAmB,CAA9B,EAAkC;AAChCC,qBAAW,GAAX;AACD;AACF;;AAEDJ,oBAAcC,IAAd,CAAmBO,IAAnB,CAAwB;AACtB,sBAAcd,IAAIG,KADI;AAEtB,kBAAUH,IAAIC,MAAJ,CAAWC,MAFC;AAGtB,mBAAWQ;AAHW,OAAxB;AAKD;;AAED,QAAIK,UAAUC,KAAKC,SAAL,CAAeX,aAAf,CAAd;AACA,QAAIY,UAAU,oCAAoCC,mBAAmBJ,OAAnB,CAAlD;;AAEA,WAAO;AACLK,cAAQ,KADH;AAELC,WAAK1B,GAFA;AAGL2B,YAAMJ;AAHD,KAAP;AAKD,GArCiB;;AAuClBK,qBAAmB,2BAASC,cAAT,EAAyB;AAC1C,QAAMC,eAAe,EAArB;AACAD,qBAAiBA,eAAeE,IAAhC;AACA;AACA,QAAIF,cAAJ,EAAoB;AAClB,UAAIA,eAAejB,IAAnB,EAAyB;AACvB,YAAIA,OAAOiB,eAAejB,IAA1B;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,KAAKE,MAAzB,EAAiCD,GAAjC,EAAsC;AACpC,cAAIR,MAAMO,KAAKC,CAAL,CAAV;AACA,cAAMmB,cAAc;AAClBC,uBAAW5B,IAAI6B,UADG;AAElBC,wBAAYlC,KAAKC,IAFC;AAGlBkC,iBAAK/B,IAAI+B,GAHS;AAIlBC,mBAAOhC,IAAIgC,KAJO;AAKlBC,oBAAQjC,IAAIiC,MALM;AAMlBC,wBAAYlC,IAAIkC,UANE;AAOlBC,sBAAU,KAPQ;AAQlBC,wBAAYpC,IAAIoC,UARE;AASlBC,iBAAKrC,IAAIqC,GATS;AAUlBC,gBAAIC,mBAAmBvC,IAAIsC,EAAJ,CAAOE,OAAP,CAAe,KAAf,EAAsB,KAAtB,CAAnB;AAVc,WAApB;AAYAf,uBAAaX,IAAb,CAAkBa,WAAlB;AACD;AACF;AACF;AACD,WAAOF,YAAP;AACD,GAjEiB;;AAmElBgB,gBAAc,sBAASC,WAAT,EAAsB;AAClC,QAAIA,YAAYC,aAAhB,EAA+B;AAC7B,aAAO,CAAC;AACNC,cAAM,QADA;AAENvB,aAAK;AAFC,OAAD,CAAP;AAID;AACD,QAAIqB,YAAYG,KAAhB,EAAuB;AACrB,aAAO,CAAC;AACND,cAAM,OADA;AAENvB,aAAK;AAFC,OAAD,CAAP;AAID;AACF;AAhFiB,CAAb;;AAmFP,mCAAezB,IAAf,E","file":"jcmBidAdapter.js","sourcesContent":["import * as utils from 'src/utils';\nimport {registerBidder} from 'src/adapters/bidderFactory';\nconst BIDDER_CODE = 'jcm';\nconst URL = '//media.adfrontiers.com/pq'\n\nexport const spec = {\n  code: BIDDER_CODE,\n  aliases: ['jcarter'],\n  isBidRequestValid: function(bid) {\n    return !!(bid.params && bid.params.siteId && bid.bidId);\n  },\n\n  buildRequests: function(validBidRequests) {\n    var BidRequestStr = {\n      bids: []\n    };\n\n    for (var i = 0; i < validBidRequests.length; i++) {\n      var adSizes = '';\n      var bid = validBidRequests[i];\n      for (var x = 0; x < bid.sizes.length; x++) {\n        adSizes += utils.parseGPTSingleSizeArray(bid.sizes[x]);\n        if (x !== (bid.sizes.length - 1)) {\n          adSizes += ',';\n        }\n      }\n\n      BidRequestStr.bids.push({\n        'callbackId': bid.bidId,\n        'siteId': bid.params.siteId,\n        'adSizes': adSizes,\n      });\n    }\n\n    var JSONStr = JSON.stringify(BidRequestStr);\n    var dataStr = 't=hb&ver=1.0&compact=true&bids=' + encodeURIComponent(JSONStr);\n\n    return {\n      method: 'GET',\n      url: URL,\n      data: dataStr\n    }\n  },\n\n  interpretResponse: function(serverResponse) {\n    const bidResponses = [];\n    serverResponse = serverResponse.body;\n    // loop through serverResponses\n    if (serverResponse) {\n      if (serverResponse.bids) {\n        var bids = serverResponse.bids;\n        for (var i = 0; i < bids.length; i++) {\n          var bid = bids[i];\n          const bidResponse = {\n            requestId: bid.callbackId,\n            bidderCode: spec.code,\n            cpm: bid.cpm,\n            width: bid.width,\n            height: bid.height,\n            creativeId: bid.creativeId,\n            currency: 'USD',\n            netRevenue: bid.netRevenue,\n            ttl: bid.ttl,\n            ad: decodeURIComponent(bid.ad.replace(/\\+/g, '%20'))\n          };\n          bidResponses.push(bidResponse);\n        };\n      };\n    }\n    return bidResponses;\n  },\n\n  getUserSyncs: function(syncOptions) {\n    if (syncOptions.iframeEnabled) {\n      return [{\n        type: 'iframe',\n        url: '//media.adfrontiers.com/hb/jcm_usersync.html'\n      }];\n    }\n    if (syncOptions.image) {\n      return [{\n        type: 'image',\n        url: '//media.adfrontiers.com/hb/jcm_usersync.png'\n      }];\n    }\n  }\n}\n\nregisterBidder(spec);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/jcmBidAdapter.js"],"sourceRoot":""}