{"version":3,"sources":["webpack:///./modules/optimaticBidAdapter.js"],"names":["utils","ENDPOINT","spec","code","supportedMediaTypes","isBidRequestValid","bid","params","placement","bidfloor","buildRequests","bids","map","method","url","data","getData","options","contentType","bidRequest","interpretResponse","response","size","bidResponse","body","seatbid","e","adm","price","logWarn","getSize","sizes","requestId","bidId","bidderCode","cpm","creativeId","id","vastXml","width","height","mediaType","currency","cur","ttl","netRevenue","parsedSizes","parseSizesInput","length","split","parseInt","undefined","loc","getTopWindowLocation","global","window","top","generateUUID","imp","video","mimes","site","domain","host","page","href","ref","getTopWindowReferrer","publisher","device","ua","navigator","userAgent","ip","devicetype"],"mappings":"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","file":"optimaticBidAdapter.js","sourcesContent":["import * as utils from 'src/utils';\nimport { registerBidder } from 'src/adapters/bidderFactory';\nexport const ENDPOINT = '//mg-bid.optimatic.com/adrequest/';\n\nexport const spec = {\n  code: 'optimatic',\n\n  supportedMediaTypes: ['video'],\n\n  isBidRequestValid: function(bid) {\n    return !!(bid && bid.params && bid.params.placement && bid.params.bidfloor);\n  },\n\n  buildRequests: function(bids) {\n    return bids.map(bid => {\n      return {\n        method: 'POST',\n        url: ENDPOINT + bid.params.placement,\n        data: getData(bid),\n        options: {contentType: 'application/json'},\n        bidRequest: bid\n      }\n    })\n  },\n\n  interpretResponse: function(response, { bidRequest }) {\n    let bid;\n    let size;\n    let bidResponse;\n    try {\n      response = response.body;\n      bid = response.seatbid[0].bid[0];\n    } catch (e) {\n      response = null;\n    }\n    if (!response || !bid || !bid.adm || !bid.price) {\n      utils.logWarn(`No valid bids from ${spec.code} bidder`);\n      return [];\n    }\n    size = getSize(bidRequest.sizes);\n    bidResponse = {\n      requestId: bidRequest.bidId,\n      bidderCode: spec.code,\n      cpm: bid.price,\n      creativeId: bid.id,\n      vastXml: bid.adm,\n      width: size.width,\n      height: size.height,\n      mediaType: 'video',\n      currency: response.cur,\n      ttl: 300,\n      netRevenue: true\n    };\n    return bidResponse;\n  }\n};\n\nfunction getSize(sizes) {\n  let parsedSizes = utils.parseSizesInput(sizes);\n  let [ width, height ] = parsedSizes.length ? parsedSizes[0].split('x') : [];\n  return {\n    width: parseInt(width, 10) || undefined,\n    height: parseInt(height, 10) || undefined\n  };\n}\n\nfunction getData (bid) {\n  let size = getSize(bid.sizes);\n  let loc = utils.getTopWindowLocation();\n  let global = (window.top) ? window.top : window;\n  return {\n    id: utils.generateUUID(),\n    imp: [{\n      id: '1',\n      bidfloor: bid.params.bidfloor,\n      video: {\n        mimes: ['video/mp4', 'video/ogg', 'video/webm', 'video/x-flv', 'application/javascript', 'application/x-shockwave-flash'],\n        width: size.width,\n        height: size.height\n      }\n    }],\n    site: {\n      id: '1',\n      domain: loc.host,\n      page: loc.href,\n      ref: utils.getTopWindowReferrer(),\n      publisher: {\n        id: '1'\n      }\n    },\n    device: {\n      ua: global.navigator.userAgent,\n      ip: '127.0.0.1',\n      devicetype: 1\n    }\n  };\n}\n\nregisterBidder(spec);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/optimaticBidAdapter.js"],"sourceRoot":""}