{"version":3,"sources":["webpack:///./modules/essensBidAdapter.js"],"names":["CONSTANTS","require","utils","bidfactory","bidmanager","adloader","Adapter","adaptermanager","EssensAdapter","baseAdapter","ENDPOINT","receivedBidRequests","callBids","bidRequest","logError","bids","essensBids","filter","isPlacementBidComplete","bid","map","essensBid","impressionId","bidId","sizes","parseSizesInput","placementId","params","dealId","deal","floorPrice","bidderRequestId","cur","urlParam","getTopWindowUrl","uaParam","getUa","isEmpty","payloadJson","url","ua","imp","scriptUrl","encodeURIComponent","JSON","stringify","loadScript","sendEmptyResponseForAllPlacement","window","navigator","userAgent","forEach","registerEmptyResponse","createBid","STATUS","NO_BID","bidderCode","addBidResponse","placementCode","pbjs","essensResponseHandler","essensResponse","logInfo","isValidResponse","registerBids","id","seatbid","essensResponses","requestHasResponse","length","isValidSeat","seat","sendResponse","hasResponse","request","bidCandidate","getBidRequest","impid","bidsToBeRegister","getBid","push","contains","find","pbBidReq","validBid","GOOD","creative_id","crid","adUrl","ext","cpm","parseFloat","price","width","parseInt","w","height","h","dealid","setBidderCode","getBidderCode","registerBidAdapter","module","exports"],"mappings":"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","file":"essensBidAdapter.js","sourcesContent":["const CONSTANTS = require('src/constants.json')\nconst utils = require('src/utils.js')\nconst bidfactory = require('src/bidfactory.js')\nconst bidmanager = require('src/bidmanager.js')\nconst adloader = require('src/adloader')\nconst Adapter = require('src/adapter.js').default\nconst adaptermanager = require('src/adaptermanager')\n\n// Essens Prebid Adapter\nfunction EssensAdapter () {\n  let baseAdapter = new Adapter('essens')\n\n  const ENDPOINT = 'bid.essrtb.com/bid/prebid_call'\n\n  let receivedBidRequests = {}\n\n  baseAdapter.callBids = function (bidRequest) {\n    if (!bidRequest) {\n      utils.logError('empty bid request received')\n      return\n    }\n    receivedBidRequests = bidRequest\n\n    const bids = bidRequest.bids || []\n\n    const essensBids = bids\n      .filter(bid => isPlacementBidComplete(bid))\n      .map(bid => {\n        let essensBid = {}\n        essensBid.impressionId = bid.bidId\n        essensBid.sizes = utils.parseSizesInput(bid.sizes)\n        essensBid.placementId = bid.params.placementId\n\n        if (bid.params.dealId) {\n          essensBid.deal = bid.params.dealId\n        }\n\n        if (bid.params.floorPrice) {\n          essensBid.floorPrice = bid.params.floorPrice\n        }\n\n        return essensBid\n      })\n\n    const bidderRequestId = bidRequest.bidderRequestId\n    const cur = ['USD']\n    const urlParam = utils.getTopWindowUrl()\n    const uaParam = getUa()\n\n    if (!utils.isEmpty(essensBids)) {\n      const payloadJson = {bidderRequestId: bidderRequestId, cur: cur, url: urlParam, ua: uaParam, imp: essensBids}\n\n      const scriptUrl = '//' + ENDPOINT + '?callback=pbjs.essensResponseHandler' +\n        '&bid=' + encodeURIComponent(JSON.stringify(payloadJson))\n      adloader.loadScript(scriptUrl)\n    } else {\n      sendEmptyResponseForAllPlacement()\n    }\n\n    function isPlacementBidComplete (bid) {\n      if (bid.bidId && bid.params && bid.params.placementId) {\n        return true\n      } else {\n        utils.logError('bid requires missing essential params for essens')\n      }\n    }\n\n    function getUa () {\n      return window.navigator.userAgent\n    }\n  }\n\n  function sendEmptyResponseForAllPlacement () {\n    if (receivedBidRequests && receivedBidRequests.bids) {\n      receivedBidRequests.bids.forEach(registerEmptyResponse)\n    }\n  }\n\n  function registerEmptyResponse (bidRequest) {\n    const bid = bidfactory.createBid(CONSTANTS.STATUS.NO_BID, bidRequest)\n    bid.bidderCode = 'essens'\n    bidmanager.addBidResponse(bidRequest.placementCode, bid)\n  }\n\n  pbjs.essensResponseHandler = function (essensResponse) {\n    utils.logInfo('received bid request from Essens')\n    if (!isValidResponse(essensResponse)) {\n      sendEmptyResponseForAllPlacement()\n      return\n    }\n\n    registerBids(essensResponse)\n\n    function isValidResponse (essensResponse) {\n      return !!(essensResponse && essensResponse.id && essensResponse.seatbid)\n    }\n\n    function registerBids (essensResponses) {\n      const requestHasResponse = []\n\n      if (essensResponses.seatbid.length > 0) {\n        essensResponses.seatbid.filter(isValidSeat).forEach(\n          seat => seat.bid.forEach(sendResponse))\n      }\n\n      receivedBidRequests.bids.filter(request => !hasResponse(request))\n        .forEach(registerEmptyResponse)\n\n      function sendResponse (bidCandidate) {\n        const bidRequest = getBidRequest(bidCandidate.impid)\n\n        const bidsToBeRegister = getBid(bidRequest, bidCandidate)\n\n        if (bidsToBeRegister) {\n          requestHasResponse.push(bidRequest)\n          bidmanager.addBidResponse(bidRequest.placementCode, bidsToBeRegister)\n        }\n      }\n\n      function hasResponse (request) {\n        return utils.contains(requestHasResponse, request)\n      }\n\n      function isValidSeat (seatbid) {\n        return ((seatbid.bid && seatbid.bid.length !== 0))\n      }\n\n      function getBidRequest (id) {\n        return receivedBidRequests.bids.find(bid => bid.bidId === id)\n      }\n    }\n\n    function getBid (pbBidReq, bidCandidate) {\n      if (!validBid(bidCandidate)) {\n        return\n      }\n      const bid = bidfactory.createBid(CONSTANTS.STATUS.GOOD, pbBidReq)\n\n      bid.creative_id = bidCandidate.crid\n      bid.adUrl = bidCandidate.ext.adUrl\n      bid.bidderCode = 'essens'\n      bid.cpm = parseFloat(bidCandidate.price)\n      bid.width = parseInt(bidCandidate.w)\n      bid.height = parseInt(bidCandidate.h)\n\n      if (bidCandidate.dealid) {\n        bid.dealId = bidCandidate.dealid\n      }\n      return bid\n    }\n\n    function validBid (bid) {\n      return !!((bid.price &&\n      bid.crid && bid.ext && bid.ext.adUrl &&\n      bid.w &&\n      bid.h &&\n      bid.impid))\n    }\n  }\n\n  return Object.assign(this, {\n    callBids: baseAdapter.callBids,\n    setBidderCode: baseAdapter.setBidderCode,\n    getBidderCode: baseAdapter.getBidderCode\n  })\n}\n\nadaptermanager.registerBidAdapter(new EssensAdapter(), 'essens')\n\nmodule.exports = EssensAdapter\n\n\n\n// WEBPACK FOOTER //\n// ./modules/essensBidAdapter.js"],"sourceRoot":""}